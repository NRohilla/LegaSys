{"version":3,"sources":["webpack:///./src/app/layout/client/client-details/client-details-routing.module.ts","webpack:///./src/app/layout/client/client-details/client-details.component.html","webpack:///./src/app/layout/client/client-details/client-details.component.scss","webpack:///./src/app/layout/client/client-details/client-details.component.ts","webpack:///./src/app/layout/client/client-details/client-details.module.ts","webpack:///./src/app/layout/client/components/client-details-co-client-details.component.html","webpack:///./src/app/layout/client/components/client-details-co-client-details.component.scss","webpack:///./src/app/layout/client/components/client-details-co-client-details.component.ts","webpack:///./src/app/layout/client/components/client-details-personal-details.component.html","webpack:///./src/app/layout/client/components/client-details-personal-details.component.scss","webpack:///./src/app/layout/client/components/client-details-personal-details.component.ts","webpack:///./src/app/layout/client/components/client-details-summary.component.html","webpack:///./src/app/layout/client/components/client-details-summary.component.scss","webpack:///./src/app/layout/client/components/client-details-summary.component.ts","webpack:///./src/app/layout/client/model/client.model.ts"],"names":[],"mappings":"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","file":"client-client-details-client-details-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientDetailsComponent } from './client-details.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ClientDetailsComponent,\r\n\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClientDetailsRoutingModule { }\r\n","module.exports = \"<app-page-header [heading]=\\\"'Client Details'\\\" [icon]=\\\"'fa fa-info-circle'\\\"></app-page-header>\\r\\n<!-- <ngb-alert style=\\\"width:40%;\\\" *ngIf=\\\"Message\\\" type=\\\"success\\\" (close)=\\\"Message = null\\\">{{ successMessage }}</ngb-alert> -->\\r\\n<mat-tab-group class=\\\"client-detail \\\">\\r\\n  <mat-card *ngIf=\\\"isLoading\\\" style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n    <mat-progress-spinner color=\\\"primary\\\" mode=\\\"indeterminate\\\">\\r\\n    </mat-progress-spinner>\\r\\n  </mat-card>\\r\\n  <mat-tab label=\\\"Summary\\\">\\r\\n    <app-client-details-summary [currentClientDetails]=\\\"currentClientDetails\\\"></app-client-details-summary>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Personal Details\\\">\\r\\n    <app-client-details-personal-details *ngIf=\\\"currentClientDetails\\\" (onCancel)=\\\"onCancel($event)\\\"\\r\\n      (onClientDetailsChange)=\\\"updateClent($event)\\\" [currentClientDetails]=\\\"currentClientDetails\\\"\\r\\n      [currentClientDetailsBackup]=\\\"currentClientDetailsBackup\\\"></app-client-details-personal-details>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Co Client Details\\\">\\r\\n    <app-client-details-co-client-details *ngIf=\\\"currentClientDetails\\\" (onCancel)=\\\"onCancel($event)\\\"\\r\\n      (onClientDetailsChange)=\\\"updateClent($event)\\\" [currentClientDetails]=\\\"currentClientDetails\\\"\\r\\n      [currentClientDetailsBackup]=\\\"currentClientDetailsBackup\\\"></app-client-details-co-client-details>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\"","module.exports = \"::ng-deep .mat-tab-labels {\\n  display: flex;\\n  background: #17a2b8; }\\n\\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\\n  background-color: #ffffff; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CurrentClientdataServiceService } from '../../../current-clientdata-service.service';\r\nimport { ClientServiceService } from '../client-service.service';\r\nimport { Client } from '../model/client.model';\r\nimport { TosterService } from '../../../shared/services/toster.service';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\n\r\n@Component({\r\n  selector: 'app-client-details',\r\n  templateUrl: './client-details.component.html',\r\n  styleUrls: ['./client-details.component.scss']\r\n})\r\nexport class ClientDetailsComponent implements OnInit {\r\n\r\n  /*********** Created on 19-Nov-2018 By Shubham Mishra **********/\r\n  Message: boolean = false;\r\n  successMessage: any;\r\n  currentClientID: any;  // Property used for holding id of client selected by user\r\n  currentClientDetails: Client; // property used for holding the details of client selecte dby user\r\n  currentClientDetailsBackup: Client; // this property is used for as reference to previous data, it will be used to cancel button\r\n  isLoading = true;\r\n  constructor(private currentClientdataService: CurrentClientdataServiceService, private clientService: ClientServiceService,\r\n    public toastr: ToastrManager,public tosterService:TosterService) { }\r\n\r\n  /***** This method is used for Geting details of client selecte dby user. This method is calling client service with parameter ID which is ID of \r\n   ***** client selected by user to view *****************************************************************************************************/\r\n  GetClientsWithID(ID: any) {\r\n    this.clientService.GetDetailsOfClientwhoseID(ID).subscribe(\r\n      suc => {\r\n        this.isLoading = false;\r\n        this.currentClientDetails = suc;\r\n        this.currentClientDetailsBackup = JSON.parse(JSON.stringify(suc));\r\n\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  /***** This method is used for updating  details of client modified by  user. This method is calling client service with parameter model *****************************************************************************************************/\r\n  updateClent(client: any) {\r\n    this.clientService.UpdateDetailsWithID(client).subscribe(\r\n      suc => {\r\n        if(suc==\"Data updated successfully!\"){\r\n          this.tosterService.showSuccess(\"Client Updated Succesfully\");\r\n           this.GetClientsWithID(this.currentClientID);\r\n           //this.show();           \r\n        }\r\n        else{\r\n          this.tosterService.showError(\"Client Updation Failed\");\r\n        }\r\n      \r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  onCancel(client: any) {\r\n    this.tosterService.showInfo(\"cancelled\");\r\n        this.currentClientDetails = client;\r\n  }\r\n  show() {\r\n    this.Message = true;\r\n    this.successMessage = \"Client Updated Succesfully\";\r\n    setTimeout(() => this.Message = false, 20000)\r\n  }\r\n  ngOnInit() {\r\n    this.currentClientID = sessionStorage.getItem(\"currentClientID\");\r\n    if (this.currentClientID != null && this.currentClientID != '') {\r\n      this.GetClientsWithID(this.currentClientID);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ClientDetailsRoutingModule } from './client-details-routing.module';\r\nimport { ClientDetailsComponent } from './client-details.component';\r\nimport { PageHeaderModule } from './../../../shared/modules/page-header/page-header.module';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ClientDetailsSummaryComponent } from '../components/client-details-summary.component';\r\nimport { ClientDetailsPersonalDetailsComponent } from '../components/client-details-personal-details.component';\r\nimport { ClientDetailsCoClientDetailsComponent } from '../components/client-details-co-client-details.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ClientDetailsRoutingModule,\r\n    PageHeaderModule,\r\n    MatTabsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule.forRoot(),\r\n    MatAutocompleteModule,\r\n    MatProgressSpinnerModule,\r\n    MatCardModule\r\n   \r\n   \r\n  ],\r\n  declarations: [ClientDetailsComponent, ClientDetailsSummaryComponent, ClientDetailsPersonalDetailsComponent, ClientDetailsCoClientDetailsComponent]\r\n})\r\nexport class ClientDetailsModule { }\r\n","module.exports = \"<form class=\\\"w-100 float-left table-active py-5 px-2\\\" [formGroup]=\\\"coClientForm\\\" *ngIf=\\\"currentClientDetails\\\">\\r\\n        <div class=\\\"row m-0\\\">\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                <label *ngIf=\\\"readOnly\\\"><strong>Co CLient </strong></label>\\r\\n                                <input [readonly]=\\\"readOnly\\\" formControlName=\\\"coClient\\\" matInput [placeholder]=\\\"GetPlaceHolder('coClient')\\\"\\r\\n                                        name=\\\"currentClientDetails.CoClient\\\">\\r\\n                                <mat-error *ngIf=\\\"coClientForm.controls['coClient'].invalid  && (coClientForm.controls['coClient'].dirty || coClientForm.controls['coClient'].touched)\\\">can\\r\\n                                        only contails text</mat-error>\\r\\n                        </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                <label *ngIf=\\\"readOnly\\\"><strong>Secondary Co Client </strong></label>\\r\\n                                <input [readonly]=\\\"readOnly\\\" formControlName=\\\"coClient2\\\" matInput [placeholder]=\\\"GetPlaceHolder('coClient2')\\\">\\r\\n\\r\\n                                <mat-error *ngIf=\\\"coClientForm.controls['coClient2'].invalid  && (coClientForm.controls['coClient'].dirty || coClientForm.controls['coClient'].touched)\\\">can\\r\\n                                        only contails text</mat-error>\\r\\n                        </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                <label *ngIf=\\\"readOnly\\\"><strong>Other Co Client </strong></label>\\r\\n                                <input [readonly]=\\\"readOnly\\\" formControlName=\\\"coClient3\\\" matInput [placeholder]=\\\"GetPlaceHolder('coClient3')\\\">\\r\\n                                <mat-error *ngIf=\\\"coClientForm.controls['coClient3'].invalid  && (coClientForm.controls['coClient'].dirty || coClientForm.controls['coClient'].touched)\\\">can\\r\\n                                        only contails text</mat-error>\\r\\n                        </mat-form-field>\\r\\n                </div>\\r\\n        </div>\\r\\n        <div class=\\\"row m-0\\\">\\r\\n\\r\\n                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                <label *ngIf=\\\"readOnly\\\"><strong>Other Co Client </strong></label>\\r\\n                                <input [readonly]=\\\"readOnly\\\" formControlName=\\\"coClient4\\\" matInput [placeholder]=\\\"GetPlaceHolder('coClient4')\\\">\\r\\n                                <mat-error *ngIf=\\\"coClientForm.controls['coClient4'].invalid  && (coClientForm.controls['coClient'].dirty || coClientForm.controls['coClient'].touched)\\\">can\\r\\n                                        only contails text</mat-error>\\r\\n                        </mat-form-field>\\r\\n                </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n</form>\\r\\n<div class=\\\"w-100 float-left d-block table-info px-4 py-2 table-info footer-height\\\">\\r\\n\\r\\n        <div class=\\\"px-2 float-right\\\" *ngIf=\\\"disable\\\">\\r\\n                <button mat-button class=\\\"btn btn-info\\\" (click)=\\\" MakeFieldEditable()\\\"><i class=\\\"fa fa-pencil-square-o\\\"\\r\\n                                aria-hidden=\\\"true\\\"></i> Edit</button>\\r\\n        </div>\\r\\n        <div class=\\\"px-2 float-right\\\" *ngIf=\\\"!disable\\\">\\r\\n                <button mat-button class=\\\"btn btn-success\\\" [disabled]=\\\"!coClientForm.valid\\\" (click)=\\\"UpdateClient()\\\">\\r\\n                        <i class=\\\"fa fa-save\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        Save</button>\\r\\n        </div>\\r\\n        <div class=\\\"px-2 float-right\\\" *ngIf=\\\"!disable\\\">\\r\\n                <button mat-button class=\\\"btn btn-secondary\\\" (click)=\\\"DiscardChanges()\\\"><i class=\\\"fa fa-times\\\"\\r\\n                                aria-hidden=\\\"true\\\"></i> Cancel</button>\\r\\n        </div>\\r\\n        <div class=\\\"px-2 float-right\\\">\\r\\n                <button mat-button class=\\\"btn btn-info\\\" [routerLink]=\\\"['/client']\\\"><i class=\\\"fa fa-backward\\\"\\r\\n                                aria-hidden=\\\"true\\\"></i> Back</button>\\r\\n        </div>\\r\\n</div>\"","module.exports = \".md-input-container label {\\n  color: black; }\\n\"","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { CurrentClientdataServiceService } from '../../../current-clientdata-service.service';\r\nimport { ClientServiceService } from '../client-service.service';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Client } from '../model/client.model';\r\n\r\n@Component({\r\n  selector: 'app-client-details-co-client-details',\r\n  templateUrl: './client-details-co-client-details.component.html',\r\n  styleUrls: ['./client-details-co-client-details.component.scss']\r\n})\r\nexport class ClientDetailsCoClientDetailsComponent implements OnInit {\r\n  @Output('onClientDetailsChange') onClientDetailsChange = new EventEmitter<any>(); //used  to emit event to parent controller \r\n  @Output('onCancel') onCancel = new EventEmitter<any>(); //used  to emit event to parent controller \r\n  @Input('currentClientDetails') currentClientDetails: Client; // used to hold current client details comming from parent controller i.e child details\r\n  @Input('currentClientDetailsBackup') currentClientDetailsBackup: Client;// used to hold current client details comming from parent controller i.e child details this will be used when we need to change the update data to previous one\r\n\r\n\r\n  /********************** Created By Shubham Mishra on 19-Nov-2018 **************/\r\n  disable: boolean = true; //this variable is used to bind the disabled attribute of input to make input fields editable and non editable\r\n  coClientForm: FormGroup;// this is form group for co client \r\n  client: Client; // This is model of client\r\n  readOnly: boolean = true;\r\n  constructor(private clientService: ClientServiceService, private currentClientdataService: CurrentClientdataServiceService, private formBuilder: FormBuilder) {\r\n\r\n  }\r\n  /****** This fuction is used to make the form field editable  */\r\n  MakeFieldEditable() {\r\n    if (this.disable) {\r\n      this.disable = false;\r\n      this.readOnly = false;\r\n    }\r\n    else {\r\n      this.disable = true;\r\n      this.readOnly = true;\r\n    }\r\n  }\r\n  /****** This function is used to discard changes done by user, and replace changed data with previous data */\r\n  /*** modified on 27 Nov 2018  By Shubham Mishra *****/\r\n  DiscardChanges() {\r\n    this.currentClientDetails = this.currentClientDetailsBackup;\r\n    this.LoadCoClientForm();\r\n    this.onCancel.emit(this.currentClientDetails);\r\n    this.MakeFieldEditable();\r\n  }\r\n  /***** This function is used to update details of a client, following fucntion is emiting a event  */\r\n  UpdateClient() {\r\n    this.currentClientDetails.CoClient = this.coClientForm.controls['coClient'].value;\r\n    this.currentClientDetails.CoClient2 = this.coClientForm.controls['coClient2'].value;\r\n    this.currentClientDetails.CoClient3 = this.coClientForm.controls['coClient3'].value;\r\n    this.currentClientDetails.CoClient4 = this.coClientForm.controls['coClient4'].value;\r\n    this.onClientDetailsChange.emit(this.currentClientDetails);\r\n    this.MakeFieldEditable();\r\n  }\r\n  /***** Writen by Shubham  Mishra on 21 Nov 2018 ****\r\n   * ******* This fucntion is used to create a reactive form ************/\r\n  CreateCoClientForm() {\r\n    this.coClientForm = this.formBuilder.group({\r\n      coClient: ['', Validators.pattern('^[a-zA-Z ]+$')],\r\n      coClient2: ['', Validators.pattern('^[a-zA-Z ]+$')],\r\n      coClient3: ['', Validators.pattern('^[a-zA-Z ]+$')],\r\n      coClient4: ['', Validators.pattern('^[a-zA-Z ]+$')]\r\n    });\r\n  }\r\n  /******** Created on 27 nov 2018 ********/\r\n  /******** Following method will be used to get the place holder ********/\r\n  GetPlaceHolder(controlName: string) {\r\n    if (!this.readOnly) {\r\n      switch (controlName) {\r\n        case 'coClient': return \"Primary Co client \";\r\n        case 'coClient2': return \"Secondary Co Client\";\r\n        case 'coClient3': return \"Other Co Client \";\r\n        case 'coClient4': return \"Other Co Client \";\r\n      }\r\n    }\r\n    else {\r\n      return \" \";\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    if (this.currentClientDetails) {\r\n      this.CreateCoClientForm();\r\n      this.LoadCoClientForm();\r\n      this.coClientForm.markAsTouched();\r\n    }\r\n  }\r\n  /********** Writen on 27 Nov 2018 **/\r\n  LoadCoClientForm() {\r\n    this.coClientForm.controls['coClient'].setValue(this.currentClientDetails.CoClient);\r\n    this.coClientForm.controls['coClient2'].setValue(this.currentClientDetails.CoClient2);\r\n    this.coClientForm.controls['coClient3'].setValue(this.currentClientDetails.CoClient3);\r\n    this.coClientForm.controls['coClient4'].setValue(this.currentClientDetails.CoClient4);\r\n  }\r\n\r\n}\r\n","module.exports = \"<form class=\\\"w-100 float-left table-active py-5 px-2\\\" [formGroup]=\\\"personalDetailsForm\\\" *ngIf=\\\"currentClientDetails\\\">\\r\\n    <div class=\\\"row m-0\\\">\\r\\n        <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n                    <label *ngIf=\\\"readOnly\\\"><strong>Client Name  </strong></label>\\r\\n                <input [readonly]=\\\"readOnly\\\" formControlName=\\\"clientName\\\" matInput [placeholder]=\\\"GetPlaceHolder('clientName')\\\">\\r\\n                <mat-error *ngIf=\\\"personalDetailsForm.controls['clientName'].invalid  && (personalDetailsForm.controls['clientName'].dirty || personalDetailsForm.controls['clientName'].touched)\\\">\\r\\n                    {{ GetErrorMessage('clientName')}}</mat-error>\\r\\n                 \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n                    <label *ngIf=\\\"readOnly\\\"><strong>Client Address </strong></label>\\r\\n                <input [readonly]=\\\"readOnly\\\" formControlName=\\\"clientAddress\\\" matInput  [placeholder]=\\\"GetPlaceHolder('clientAddress')\\\">\\r\\n                    <mat-error *ngIf=\\\"personalDetailsForm.controls['clientAddress'].invalid  && (personalDetailsForm.controls['clientAddress'].dirty || personalDetailsForm.controls['clientAddress'].touched)\\\">Client address can not be empty</mat-error>\\r\\n                 \\r\\n                </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n                <mat-form-field class=\\\"w-100\\\">\\r\\n                    <label *ngIf=\\\"readOnly\\\"><strong>Country</strong></label>\\r\\n        <input  [readonly]=\\\"readOnly\\\" type=\\\"text\\\" matInput formControlName=\\\"country\\\" [matAutocomplete]=\\\"auto\\\" [placeholder]=\\\"GetPlaceHolder('country')\\\">\\r\\n        <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\" style=\\\"max-height: 200px !important\\\">\\r\\n          <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option\\\" style=\\\"max-height: 200px !important\\\">\\r\\n            {{option}}\\r\\n          </mat-option>\\r\\n        </mat-autocomplete>\\r\\n        <mat-error *ngIf=\\\"personalDetailsForm.controls['country'].invalid  && (personalDetailsForm.controls['country'].dirty || personalDetailsForm.controls['country'].touched)\\\">Country can not be blank</mat-error>\\r\\n                   \\r\\n    </mat-form-field>\\r\\n    </div>\\r\\n        \\r\\n    </div>\\r\\n    <div class=\\\"row m-0\\\">\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n                    <mat-form-field class=\\\"w-100\\\">\\r\\n                            <label *ngIf=\\\"readOnly\\\"><strong>Primary Client Email </strong></label>\\r\\n                        <input [readonly]=\\\"readOnly\\\" formControlName=\\\"clientEmail\\\" matInput [placeholder]=\\\"GetPlaceHolder('clientEmail')\\\"  >\\r\\n                        <mat-error *ngIf=\\\"personalDetailsForm.controls['clientEmail'].invalid  && (personalDetailsForm.controls['clientEmail'].dirty || personalDetailsForm.controls['clientEmail'].touched)\\\">\\r\\n                           {{ GetErrorMessage('clientEmail')}}</mat-error>\\r\\n                           \\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n       \\r\\n        <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n                    <label *ngIf=\\\"readOnly\\\"><strong>Secondary Client  Email </strong></label>\\r\\n                <input [readonly]=\\\"readOnly\\\" formControlName=\\\"clientEmail2\\\" matInput [placeholder]=\\\"GetPlaceHolder('clientEmail2')\\\">\\r\\n                <mat-error *ngIf=\\\"personalDetailsForm.controls['clientEmail2'].invalid  && (personalDetailsForm.controls['clientEmail2'].dirty || personalDetailsForm.controls['clientEmail2'].touched)\\\">Please enter valid Email</mat-error>\\r\\n           \\r\\n              \\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n                <mat-form-field class=\\\"w-100\\\">\\r\\n                        <label *ngIf=\\\"readOnly\\\"><strong>Other Client Email </strong></label>\\r\\n                    <input [readonly]=\\\"readOnly\\\" formControlName=\\\"clientEmail3\\\" matInput [placeholder]=\\\"GetPlaceHolder('clientEmail3')\\\" >\\r\\n                    <mat-error *ngIf=\\\"personalDetailsForm.controls['clientEmail3'].invalid  && (personalDetailsForm.controls['clientEmail3'].dirty || personalDetailsForm.controls['clientEmail3'].touched)\\\">Please enter valid Email</mat-error>\\r\\n                   \\r\\n                   \\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n         \\r\\n    </div>\\r\\n    <div class=\\\"row m-0\\\">       \\r\\n      \\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-6 float-left\\\">\\r\\n                    <mat-form-field class=\\\"w-100\\\">\\r\\n                            <label *ngIf=\\\"readOnly\\\" ><strong>Other Client Email </strong></label>\\r\\n                        <input  [readonly]=\\\"readOnly\\\" formControlName=\\\"clientEmail4\\\" matInput [placeholder]=\\\"GetPlaceHolder('clientEmail4')\\\"  >\\r\\n                       <mat-error *ngIf=\\\"personalDetailsForm.controls['clientEmail4'].invalid  && (personalDetailsForm.controls['clientEmail4'].dirty || personalDetailsForm.controls['clientEmail4'].touched)\\\">Please enter valid Email</mat-error>\\r\\n                                        \\r\\n                    </mat-form-field>\\r\\n                </div>       \\r\\n        \\r\\n    </div>\\r\\n</form>\\r\\n<div class=\\\"w-100 float-left d-block table-info px-4 py-2 table-info footer-height\\\" >\\r\\n    <div class=\\\"px-2 float-right\\\" *ngIf=\\\"disable\\\">\\r\\n        <button mat-button class=\\\"btn btn-info\\\" (click)=\\\" MakeFieldEditable()\\\"><i class=\\\"fa fa-pencil-square-o\\\"\\r\\n                aria-hidden=\\\"true\\\"></i> Edit</button>\\r\\n    </div>\\r\\n    <div class=\\\"px-2 float-right\\\" *ngIf=\\\"!disable\\\">\\r\\n        <button mat-button class=\\\"btn btn-success\\\" [disabled]=\\\"!personalDetailsForm.valid \\\" (click)=\\\"UpdateClient()\\\"><i class=\\\"fa fa-save\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            Save</button>\\r\\n    </div>\\r\\n    <div class=\\\"px-2 float-right\\\" *ngIf=\\\"!disable\\\">\\r\\n        <button mat-button class=\\\"btn btn-secondary\\\" (click)=\\\"DiscardChanges()\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            Cancel</button>\\r\\n    </div>\\r\\n    <div class=\\\"px-2 float-right\\\">\\r\\n            <button  mat-button class=\\\"btn btn-info\\\" [routerLink]=\\\"['/client']\\\"><i class=\\\"fa fa-backward\\\" aria-hidden=\\\"true\\\"></i> Back</button>\\r\\n            </div>\\r\\n</div>\"","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\"","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { ClientServiceService } from '../client-service.service';\r\nimport { CurrentClientdataServiceService } from '../../../current-clientdata-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from \"@angular/forms\";\r\nimport { Client } from '../model/client.model';\r\nimport { isError } from 'util';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-client-details-personal-details',\r\n  templateUrl: './client-details-personal-details.component.html',\r\n  styleUrls: ['./client-details-personal-details.component.scss']\r\n})\r\n\r\nexport class ClientDetailsPersonalDetailsComponent implements OnInit {\r\n\r\n  /****** Created By Shubham Mishra on 19-Nov-2018 ************/\r\n  @Output('onCancel') onCancel = new EventEmitter<any>(); //used  to emit event to parent controller \r\n  @Output('onClientDetailsChange') onClientDetailsChange = new EventEmitter<any>(); //used  to emit event to parent controller \r\n  @Input('currentClientDetails') currentClientDetails: Client; // used to hold current client details comming from parent controller i.e child details\r\n  @Input('currentClientDetailsBackup') currentClientDetailsBackup: Client;// used to hold current client details comming from parent controller i.e child details this will be used when we need to change the update data to previous one\r\n\r\n  disable: boolean = true; // this variable is used to bind the disabled attribute of input to make input fields editable and non editable\r\n  personalDetailsForm: FormGroup; // This formgroup is for Client Personal Details form\r\n  emailPattern = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$';// this regex will be used to validate email pattern\r\n\r\n  /**** Writen on 23 Nov 2018 ***********/\r\n  readOnly: boolean = true;// this variable will be used to make the form field non editable\r\n  // following array will hold the list of country and willbe used to shown as dropdown in country field \r\n  CountryList: string[] = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua &amp; Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia &amp; Herzegovina\", \"Botswana\", \"Brazil\", \"British Virgin Islands\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Cape Verde\", \"Cayman Islands\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Congo\", \"Cook Islands\", \"Costa Rica\", \"Cote D Ivoire\", \"Croatia\", \"Cruise Ship\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\", \"French West Indies\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kuwait\", \"Kyrgyz Republic\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Namibia\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Norway\", \"Oman\", \"Pakistan\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Pierre &amp; Miquelon\", \"Samoa\", \"San Marino\", \"Satellite\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"South Africa\", \"South Korea\", \"Spain\", \"Sri Lanka\", \"St Kitts &amp; Nevis\", \"St Lucia\", \"St Vincent\", \"St. Lucia\", \"Sudan\", \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor L'Este\", \"Togo\", \"Tonga\", \"Trinidad &amp; Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks &amp; Caicos\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States of America\", \"Uruguay\", \"Uzbekistan\", \"Venezuela\", \"Vietnam\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];\r\n  filteredOptions: Observable<string[]>;// this variable will hold the returned list of autocomplete\r\n  constructor(private clientService: ClientServiceService, private currentClientdataService: CurrentClientdataServiceService, private router: Router, private formBuilder: FormBuilder) {\r\n  }\r\n  /****** This fuction is used to make the form field editable  */\r\n  MakeFieldEditable() {\r\n\r\n    if (this.disable) {\r\n      this.disable = false;\r\n      this.readOnly = false;\r\n      //this.personalDetailsForm.enable();\r\n    }\r\n    else {\r\n      this.disable = true;\r\n      this.readOnly = true;\r\n      //this.personalDetailsForm.disable();\r\n    }\r\n  }\r\n  /****** This function is used to discard changes done by user, and replace changed data with previous data */\r\n  DiscardChanges() {\r\n    this.currentClientDetails = this.currentClientDetailsBackup;\r\n    this.LoadValuesInPersonalDetailsForm();\r\n    this.onCancel.emit(this.currentClientDetails);\r\n    this.MakeFieldEditable();\r\n  }\r\n  /***** This function is used to update details of a client, following fucntion is making a call to api and sending the modal as parameter */\r\n  UpdateClient() {\r\n    this.currentClientDetails.ClientName = this.personalDetailsForm.controls['clientName'].value;\r\n    this.currentClientDetails.Address = this.personalDetailsForm.controls['clientAddress'].value;\r\n    this.currentClientDetails.EmailID = this.personalDetailsForm.controls['clientEmail'].value;\r\n    this.currentClientDetails.EmailID2 = this.personalDetailsForm.controls['clientEmail2'].value;\r\n    this.currentClientDetails.EmailID3 = this.personalDetailsForm.controls['clientEmail3'].value;\r\n    this.currentClientDetails.EmailID4 = this.personalDetailsForm.controls['clientEmail4'].value;\r\n    this.currentClientDetails.Country = this.personalDetailsForm.controls['country'].value;\r\n    this.onClientDetailsChange.emit(this.currentClientDetails);\r\n    this.MakeFieldEditable();\r\n  }\r\n  /***** Writen by Shubham  Mishra on 21 Nov 2018 ****\r\n   * ******* This fucntion is used to create a reactive form ************/\r\n  CreatePersonalDetailsForm() {\r\n    this.personalDetailsForm = this.formBuilder.group({\r\n      clientName: ['', [Validators.required, Validators.pattern('^[a-zA-Z ]+$')]],\r\n      clientAddress: ['', Validators.required],\r\n      clientEmail: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\r\n      clientEmail2: ['', Validators.pattern(this.emailPattern)],\r\n      clientEmail3: ['', Validators.pattern(this.emailPattern)],\r\n      clientEmail4: ['', Validators.pattern(this.emailPattern)],\r\n      country: ['', Validators.required]\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    if (this.currentClientDetails) {\r\n      this.CreatePersonalDetailsForm();\r\n      this.LoadValuesInPersonalDetailsForm();\r\n      this.filteredOptions = this.personalDetailsForm.controls['country'].valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value))\r\n      );\r\n    }\r\n  }\r\n  /**** This function is used to filter the name of country from country List  */\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.CountryList.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n  /******** Created by SHubham Kumar Mishra on 22 nov 2018 **********\r\n   ********* following method are used for geting validation error message dynamically **********/\r\n  GetErrorMessage(controlName: string) {\r\n    switch (controlName) {\r\n      case 'clientName': if (this.personalDetailsForm.controls['clientName'].errors.required) {\r\n        return \"Client name can not be empty\";\r\n      }\r\n        if (this.personalDetailsForm.controls['clientName'].errors.pattern) {\r\n          return \"Client name can only contails text\";\r\n        }\r\n\r\n      case 'clientEmail': if (this.personalDetailsForm.controls['clientEmail'].errors.required) {\r\n        return \"Primary Email can not be empty\";\r\n      }\r\n        if (this.personalDetailsForm.controls['clientEmail'].errors.pattern) {\r\n          return \"Please enter valid Email\";\r\n        }\r\n      default: return \" \";\r\n    }\r\n  }\r\n  /******* Created by Shubham Kumar Mishra on 22 Nov 2018 ***********\r\n   * ******* Following method is to load the values into the form ********/\r\n  LoadValuesInPersonalDetailsForm() {\r\n    this.personalDetailsForm.controls['clientName'].setValue(this.currentClientDetails.ClientName);\r\n    this.personalDetailsForm.controls['clientAddress'].setValue(this.currentClientDetails.Address);\r\n\r\n    if (this.currentClientDetails.EmailID != null && this.currentClientDetails.EmailID != '' && this.currentClientDetails.EmailID != undefined) {\r\n      this.personalDetailsForm.controls['clientEmail'].setValue(this.currentClientDetails.EmailID.trim());\r\n    }\r\n    if (this.currentClientDetails.EmailID2 != null && this.currentClientDetails.EmailID2 != '' && this.currentClientDetails.EmailID2 != undefined) {\r\n      this.personalDetailsForm.controls['clientEmail2'].setValue(this.currentClientDetails.EmailID2.trim());\r\n    }\r\n    if (this.currentClientDetails.EmailID3 != null && this.currentClientDetails.EmailID3 != '' && this.currentClientDetails.EmailID3 != undefined) {\r\n      this.personalDetailsForm.controls['clientEmail3'].setValue(this.currentClientDetails.EmailID3.trim());\r\n    }\r\n    if (this.currentClientDetails.EmailID4 != null && this.currentClientDetails.EmailID4 != '' && this.currentClientDetails.EmailID4 != undefined) {\r\n      this.personalDetailsForm.controls['clientEmail4'].setValue(this.currentClientDetails.EmailID4.trim());    }\r\n    this.personalDetailsForm.controls['country'].setValue(this.currentClientDetails.Country);\r\n  }\r\n\r\n  /****** Created on 27 Nov 2017 ************/\r\n  /****** Following method will be used to det the placeholder for mat input  ************/\r\n\r\n  GetPlaceHolder(str: string) {\r\n    if (!this.readOnly) {\r\n      switch (str) {\r\n        case 'clientName': return \"Client Name \";\r\n        case 'clientAddress': return \"Client Address \";\r\n        case 'country': return \"Country \";\r\n        case 'clientEmail': return \"Primary Email  \";\r\n        case 'clientEmail2': return \"Secondary Email \";\r\n        case 'clientEmail3': return \"Other Email\";\r\n        case 'clientEmail4': return \"Other Email\";\r\n        default: return \" \";\r\n      }\r\n    }\r\n    else {\r\n      return \" \";\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"w-100 float-left table-active py-4 px-2\\\" *ngIf=\\\"currentClientDetails\\\">\\r\\n      <div class=\\\"row mx-0 my-2\\\">\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong>Client Name :</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.ClientName}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong>Address:</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.Address}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong>Country:</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.Country}}</div>\\r\\n            </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"row mx-0 my-2\\\">\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong>Primary Email ID :</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.EmailID}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong>Secondry Email ID :</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.EmailID2}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong>Email ID Other :</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.EmailID2}}</div>\\r\\n            </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"row mx-0 my-2\\\">\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong>Email ID Other:</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.EmailID4}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong>Primary Co-Client :</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.CoClient}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong>Secondry Co-Client:</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.CoClient2}}</div>\\r\\n            </div>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"row mx-0 my-2\\\">\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong> Co-Client Other :</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.CoClient3}}</div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                  <div class=\\\"summary-lebel float-left\\\"><strong>Co-Client Other :</strong></div>\\r\\n                  <div class=\\\"float-left\\\">{{currentClientDetails.CoClient4}}</div>\\r\\n            </div>\\r\\n      </div>\\r\\n</div>\\r\\n<div class=\\\"w-100 float-left d-block table-info px-4 py-2 table-info footer-height\\\">   \\r\\n</div>\"","module.exports = \".summary-lebel {\\n  width: 150px; }\\n\"","import { Component, OnInit, OnChanges, Injectable, Input } from '@angular/core';\r\nimport { ClientServiceService } from '../client-service.service';\r\nimport { CurrentClientdataServiceService } from '../../../current-clientdata-service.service';\r\n@Component({\r\n  selector: 'app-client-details-summary',\r\n  templateUrl: './client-details-summary.component.html',\r\n  styleUrls: ['./client-details-summary.component.scss']\r\n})\r\n\r\nexport class ClientDetailsSummaryComponent implements OnInit {\r\n  /****** Created By Shubham Mishra on 19-Nov-2018 ************/  \r\n  @Input('currentClientDetails') currentClientDetails: object; // this property will hold the all details of client selected by user\r\n  constructor() {}\r\n  ngOnInit() {}\r\n\r\n}\r\n","export class Client {\r\n     //ClientDetailID: number;\r\n     ClientName: string;\r\n     Country: string;\r\n     Address:string;\r\n     CoClient: string;\r\n     CoClient2: string;\r\n     CoClient3: string;\r\n     CoClient4: string;\r\n     EmailID: string;\r\n     EmailID2: string;\r\n     EmailID3: string;\r\n     EmailID4: string;\r\n     Created_By: number;\r\n     Updated_By: number;\r\n     IsActive: boolean;\r\n   \r\n}\r\n"],"sourceRoot":""}