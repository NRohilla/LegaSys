{"version":3,"sources":["webpack:///./src/app/layout/client/client-routing.module.ts","webpack:///./src/app/layout/client/client-service.service.ts","webpack:///./src/app/layout/client/client.component.html","webpack:///./src/app/layout/client/client.component.scss","webpack:///./src/app/layout/client/client.component.ts","webpack:///./src/app/layout/client/client.module.ts"],"names":[],"mappings":"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","file":"client-client-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport{ClientModule} from './client.module';\r\nimport { from } from 'rxjs';\r\nimport { ClientComponent } from './client.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:ClientComponent\r\n    \r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClientRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientServiceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  GetClientDetails(){\r\n    return this.http.get('http://localhost:58164/api/Client/');\r\n  }\r\n}\r\n","module.exports = \"\\r\\n<app-page-header [heading]=\\\"'Clients'\\\" [icon]=\\\"'fa fa-user'\\\"></app-page-header>\\r\\n\\r\\n<div>\\r\\n  <!-- This button will be used to add client into the database-->\\r\\n   <button mat-flat-button color=\\\"primary\\\">Add Client</button>\\r\\n \\r\\n  \\r\\n  <!-- This function is for filter the grid -->\\r\\n   <mat-form-field>\\r\\n     <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search Clients\\\">\\r\\n   </mat-form-field>\\r\\n   <table mat-table [dataSource]=\\\"clientDetails\\\" class=\\\"mat-elevation-z8 \\\"  >\\r\\n \\r\\n     <!--- Note that these columns can be defined in any order.\\r\\n           The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n   \\r\\n     <!-- client name column -->\\r\\n     <ng-container matColumnDef=\\\"ClientName\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef> Client Name </th>\\r\\n       <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ClientName}} </td>\\r\\n     </ng-container>\\r\\n   \\r\\n     <!-- client email Column -->\\r\\n     <ng-container matColumnDef=\\\"Email\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef>Email </th>\\r\\n       <td mat-cell *matCellDef=\\\"let element\\\"> {{element.EmailID}} </td>\\r\\n     </ng-container>\\r\\n   \\r\\n     <!--client address Column -->\\r\\n     <ng-container matColumnDef=\\\"Address\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef>Address </th>\\r\\n       <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Address}} </td>\\r\\n     </ng-container>\\r\\n   \\r\\n     <!-- client country Column -->\\r\\n     <ng-container matColumnDef=\\\"Country\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef> Country </th>\\r\\n       <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Country}} </td>\\r\\n     </ng-container>\\r\\n     <!-- co client  Column -->\\r\\n     <ng-container matColumnDef=\\\"CoClient\\\">\\r\\n         <th mat-header-cell *matHeaderCellDef> Co Client </th>\\r\\n         <td mat-cell *matCellDef=\\\"let element\\\"> {{element.CoClient}} </td>\\r\\n       </ng-container>\\r\\n     <!--Action  Column, will contains button for View,Edit and Delete -->\\r\\n       <ng-container matColumnDef=\\\"action\\\">\\r\\n         <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n         <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n             <button mat-button>View Details</button>\\r\\n             <button mat-button>Delete</button>\\r\\n         </td>\\r\\n       </ng-container>\\r\\n      \\r\\n     <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n     <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n   </table>\\r\\n   <!-- this code is for pagignator -->\\r\\n   <mat-paginator [pageSizeOptions]=\\\"[2, 3, 5]\\\" showFirstLastButtons></mat-paginator>\\r\\n \\r\\n \\r\\n     \\r\\n \"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 16px;\\n  width: 100%;\\n  margin-top: 20px; }\\n\"","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatTableDataSource} from '@angular/material';\r\nimport {MatPaginator} from '@angular/material';\r\nimport {ClientServiceService} from './client-service.service'\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class ClientComponent implements OnInit {\r\n  // Created By VE team on 05 Nov 2018 \r\n\r\n  clientDetails:any= [];  // This array will hold the all client details\r\n  constructor(private modalService: NgbModal,private clientService:ClientServiceService ) { }\r\n\r\ndataSource = new MatTableDataSource(this.clientDetails);\r\n\r\n// this fuction is used for sorting the grid\r\napplyFilter(filterValue: string) {\r\n  this.dataSource.filter = filterValue.trim().toLowerCase();\r\n}\r\n\r\n\r\ndisplayedColumns: string[] = ['ClientName', 'Email', 'Address', 'Country','CoClient','action']; // This is an aaray for Header in Grid displaying client details\r\n  ngOnInit() {\r\n    // Following fuction will execute and call to client service to get all client from database\r\n    debugger;\r\n    this.clientService.GetClientDetails().subscribe(\r\n      suc => {\r\n       console.log(suc);\r\n       this.clientDetails=suc;\r\n       console.log(this.clientDetails);\r\n      \r\n      },\r\n      err =>{\r\n        console.log(err);\r\n\r\n      }\r\n      );\r\n  }\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { ClientRoutingModule } from './client-routing.module';\r\nimport { ClientComponent } from './client.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatTableModule} from '@angular/material';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {ClientServiceService} from './client-service.service'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ClientRoutingModule,\r\n    NgbModule.forRoot(),\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatPaginatorModule,\r\n    MatButtonModule,\r\n    PageHeaderModule\r\n    \r\n    \r\n  ],\r\n  providers: [ClientServiceService],\r\n  declarations: [ClientComponent]\r\n\r\n})\r\nexport class ClientModule { }\r\n"],"sourceRoot":""}