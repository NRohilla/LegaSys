{"version":3,"sources":["webpack:///./src/app/layout/client/client-routing.module.ts","webpack:///./src/app/layout/client/client.component.html","webpack:///./src/app/layout/client/client.component.scss","webpack:///./src/app/layout/client/client.component.ts","webpack:///./src/app/layout/client/client.module.ts","webpack:///./src/app/layout/client/deleteDialog.html","webpack:///./src/app/layout/client/deleteDialog.ts"],"names":[],"mappings":"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","file":"client-client-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport{ClientModule} from './client.module';\r\nimport { from } from 'rxjs';\r\nimport { ClientComponent } from './client.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component:ClientComponent\r\n    \r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClientRoutingModule { }\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  <app-page-header [heading]=\\\"'Clients'\\\" [icon]=\\\"'fa fa-users'\\\"></app-page-header>\\r\\n\\r\\n</div>\\r\\n <!-- This button will be used to add client into the database-->\\r\\n <!-- <ngb-alert style=\\\"width:40%;\\\" *ngIf=\\\"Message\\\" type=\\\"success\\\" (close)=\\\"Message = null\\\">{{ successMessage }}</ngb-alert> -->\\r\\n\\r\\n \\r\\n <!-- This function is for filter the grid -->\\r\\n  <div >\\r\\n  <mat-table [dataSource]=\\\"clientDetails\\\" matSort class=\\\"table-active\\\">\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n  \\r\\n    <!-- client name column -->\\r\\n    <ng-container matColumnDef=\\\"ClientName\\\">\\r\\n      <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header> <span class=\\\"text-white font-14\\\">Client Name</span> </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.ClientName}} </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n    <!-- client email Column -->\\r\\n    <ng-container matColumnDef=\\\"Email\\\">\\r\\n      <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header><span class=\\\"text-white font-14\\\">Email</span> </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.EmailID}} </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n    <!--client address Column -->\\r\\n    <ng-container matColumnDef=\\\"Address\\\">\\r\\n      <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header><span class=\\\"text-white font-14\\\">Address</span> </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.Address}} </mat-cell>\\r\\n    </ng-container>\\r\\n  \\r\\n    <!-- client country Column -->\\r\\n    <ng-container matColumnDef=\\\"Country\\\">\\r\\n      <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header> <span class=\\\"text-white font-14\\\">Country</span> </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.Country}} </mat-cell>\\r\\n    </ng-container>\\r\\n    <!-- co client  Column -->\\r\\n    <ng-container matColumnDef=\\\"CoClient\\\">\\r\\n        <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header>  <span class=\\\"text-white font-14\\\">Co Client</span> </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{element.CoClient}} </mat-cell>\\r\\n      </ng-container>\\r\\n    <!--Action  Column, will contains button for View,Edit and Delete -->\\r\\n      <ng-container matColumnDef=\\\"action\\\">\\r\\n        <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header> </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-right\\\">\\r\\n          <!-- [routerLink]=\\\"['/client-details'] -->\\r\\n            <button mat-button (click)=\\\"ViewClientDetails(element.ClientDetailID)\\\"  class=\\\"btn btn-info mx-1\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i> View</button>\\r\\n          \\r\\n            <button mat-button (click)= \\\"openDialog(element.ClientDetailID)\\\" class=\\\"btn btn-danger mx-1\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> Delete</button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row >\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n  </mat-table>\\r\\n  <mat-card *ngIf=\\\"isLoading\\\" style=\\\"display: flex; justify-content: center; align-items: center\\\">\\r\\n    <mat-progress-spinner \\r\\n      color=\\\"primary\\\" \\r\\n      mode=\\\"indeterminate\\\">\\r\\n    </mat-progress-spinner>\\r\\n  </mat-card>\\r\\n  \\r\\n  <!-- this code is for pagignator -->\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 15]\\\" showFirstLastButtons class=\\\"table-active\\\"></mat-paginator>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"w-100 float-left table-info px-4 py-2 text-right footer-height\\\" >\\r\\n  <!-- This button will be used to add client into the database-->\\r\\n\\r\\n  <button  mat-button class=\\\"btn btn-info\\\" [routerLink]=\\\"['/add-client']\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Add Client</button>\\r\\n</div>\\r\\n\\r\\n\\r\\n    \\r\\n\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 16px;\\n  width: 100%;\\n  margin-top: 20px; }\\n\\nth.mat-sort-header-sorted {\\n  color: #ffffff; }\\n\"","import { Component, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { MatPaginator, MatSort } from '@angular/material';\r\nimport { ClientServiceService } from './client-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { CurrentClientdataServiceService } from '../../current-clientdata-service.service';\r\nimport { Client } from './model/client.model';\r\nimport {DeleteDialog} from './deleteDialog';\r\nimport { TosterService } from '../../shared/services/toster.service';\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class ClientComponent implements OnInit {\r\n  // Created By VE team on 05 Nov 2018 \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  // This is an array for Header in Grid displaying client details\r\n  displayedColumns: string[] = ['ClientName', 'Email', 'Address', 'Country', 'CoClient', 'action'];\r\n  clientDetails: any = [];  // This array will hold the all client details\r\n  Message: boolean = false;\r\n  successMessage: string;\r\n  isLoading = true;// this varibale will be used to display progressive spinner\r\n\r\n\r\n  constructor(public dialog: MatDialog,private modalService: NgbModal,private clientService: ClientServiceService, \r\n     private router: Router, private currentClientdataService: CurrentClientdataServiceService,public tosterService:TosterService) {\r\n   \r\n\r\n  }\r\n  /*********** Writen By Shubham Mishra on 8 nov 2018 following method is used for geting selected client id from fornt end and \r\n   *********** it to a property in created in a service and redirecting user to a client details page   */\r\n  ViewClientDetails(element: any) {\r\n    //this.currentClientdataService.currentClientID = element;\r\n    sessionStorage.setItem(\"currentClientID\", element);    \r\n    this.router.navigate(['/client-details']);\r\n  }\r\n  /*********** Writen By Shubham Mishra on 6 nov 2018 following method is used to gell all  client details from database   */\r\n  GetAllClients() {\r\n      this.clientService.GetClientDetails().subscribe(\r\n      suc => {\r\n        this.isLoading = false;\r\n        this.clientDetails = suc;\r\n        this.clientDetails = new MatTableDataSource<Client>(this.clientDetails);\r\n        this.clientDetails.paginator = this.paginator;\r\n        this.clientDetails.sort = this.sort;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  /*********** Writen By Shubham Mishra on 8 nov 2018 following method is used for deleteing a perticular client   */\r\n\r\n  DeleteClientWithID(ID) {\r\n    this.clientService.DeleteClient(ID).subscribe(\r\n      suc => {\r\n        if(suc==\"Data deleted successfully!\"){\r\n          this.tosterService.showSuccess(\"Client Delete successfully\");\r\n          //this.show();\r\n           this.GetAllClients();          \r\n        }else{\r\n          this.tosterService.showError(\"Client Deletion Failed\");\r\n        }\r\n\r\n      \r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n  show() {\r\n    this.Message = true;\r\n    this.successMessage = \"Client Deleted Succesfully\";\r\n    setTimeout(() => this.Message = false, 2500)\r\n  }\r\n\r\n/******* Created on 27 Nov 2018 By Vaibhav ******/\r\n  openDialog(dailogID): void {\r\n    sessionStorage.setItem(\"currentClientdailogID\",dailogID);\r\n    const dialogRef = this.dialog.open(DeleteDialog, {\r\n      width: '370px',\r\n\r\n      data: {confirm: true }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      \r\n      if (result)\r\n      this.DeleteClientWithID(dailogID);\r\n    });\r\n  \r\n  }\r\n  ngOnInit() {\r\n    // Following fuction will execute and call to client service to get all client from database\r\n    this.GetAllClients();\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ClientRoutingModule } from './client-routing.module';\r\nimport { ClientComponent } from './client.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatTableModule, MatFormFieldModule, MatInputModule, MatPaginatorModule, MatButtonModule, MatDialogModule, MatTabsModule, MatSortModule } from '@angular/material';\r\nimport { ClientServiceService } from './client-service.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {DeleteDialog} from './deleteDialog';   \r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ClientRoutingModule,\r\n    NgbModule.forRoot(),\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatPaginatorModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    MatTabsModule,\r\n    MatSortModule,\r\n    MatProgressSpinnerModule,\r\n    MatCardModule\r\n   \r\n  ],\r\n  providers: [ClientServiceService],\r\n  entryComponents: [DeleteDialog],\r\n  declarations: [ClientComponent,DeleteDialog]\r\n})\r\nexport class ClientModule { }\r\n","module.exports = \"<div mat-dialog-content >\\r\\n       <strong style=\\\"font-size:16px \\\"><p *ngIf=\\\"currentClientDetails\\\"> Are you sure, you want to Delete {{currentClientDetails.ClientName}}</p></strong>\\r\\n      </div>\\r\\n      <div mat-dialog-actions>\\r\\n          <div style=\\\"margin-left:118px;\\\">\\r\\n        <button mat-raised-button class=\\\"btn btn-secondary mx-1\\\" (click)=\\\"onNoClick()\\\"> Cancel</button>\\r\\n        <button mat-raised-button class=\\\"btn btn-info mx-1\\\" [mat-dialog-close]=\\\"data.confirm\\\" cdkFocusInitial style=\\\"margin-left:28px \\\"> Yes</button>\\r\\n       \\r\\n      </div>\\r\\n      </div>\"","\r\nimport { Component, Inject} from '@angular/core';\r\nimport {MatDialogRef, MatDialog, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ClientServiceService } from './client-service.service';\r\nimport { Client } from './model/client.model';\r\n@Component({\r\n    selector: 'deleteDialog',\r\n    templateUrl: 'deleteDialog.html',\r\n  })\r\n  export class DeleteDialog {\r\n    currentClientDetails:Client;\r\n    constructor(public dialogRef: MatDialogRef<DeleteDialog>,public dialog: MatDialog, private clientService: ClientServiceService, @Inject(MAT_DIALOG_DATA) public data: object ) {}\r\n   \r\n   \r\n      onNoClick(): void {\r\n      this.dialogRef.close();\r\n    } \r\n    ngOnInit() {\r\n      debugger;\r\n      // Following fuction will execute and call to client service to get all client from database\r\n      this.clientService.GetDetailsOfClientwhoseID(sessionStorage.getItem(\"currentClientdailogID\")).subscribe(\r\n        suc => {       \r\n          this.currentClientDetails = suc;         \r\n          this.currentClientDetails.ClientName\r\n        \r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    } \r\n  }\r\n\r\n"],"sourceRoot":""}