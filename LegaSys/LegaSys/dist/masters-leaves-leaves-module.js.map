{"version":3,"sources":["webpack:///./src/app/layout/masters/leaves/leaves-routing.module.ts","webpack:///./src/app/layout/masters/leaves/leaves.component.html","webpack:///./src/app/layout/masters/leaves/leaves.component.scss","webpack:///./src/app/layout/masters/leaves/leaves.component.ts","webpack:///./src/app/layout/masters/leaves/leaves.module.ts","webpack:///./src/app/layout/masters/leaves/leaves.service.ts"],"names":[],"mappings":"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","file":"masters-leaves-leaves-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LeavesComponent } from './leaves.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component:LeavesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LeavesRoutingModule { }\r\n \r\n","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"http://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css\\\">\\n<app-page-header [heading]=\\\"'Leaves Type'\\\" [icon]=\\\"'fa fa-fw fa-users'\\\"></app-page-header>\\n\\n<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" [(ngModel)]=\\\"value\\\" placeholder=\\\"Filter\\\">\\n  <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Clear\\\" (click)=\\\"value=''; applyFilter('');\\\">\\n    <mat-icon>close</mat-icon>\\n  </button>\\n</mat-form-field>\\n\\n<table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"LeaveStatusID\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> LeaveStatus ID </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.LeaveStatusID}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"StatusName\\\">\\n    <th mat-header-cell class=\\\"bg-info\\\" *matHeaderCellDef mat-sort-header><span class=\\\"text-white text-uppercase\\\">\\n        Status Name </span></th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.StatusName}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"IsActive\\\">\\n    <th mat-header-cell class=\\\"bg-info\\\" *matHeaderCellDef> </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\">\\n      <button (click)=\\\"$event.stopPropagation(); status(element.LeaveStatusID, element.IsActive)\\\" mat-raised-button\\n        [ngClass]=\\\"{'btn-info': !element.IsActive, 'btn-danger': element.IsActive}\\\">\\n        <mat-icon *ngIf=\\\"!element.IsActive\\\">verified_user</mat-icon>\\n        <mat-icon *ngIf=\\\"element.IsActive\\\">not_interested</mat-icon>\\n        {{element.IsActive ? 'Deactivate' : 'Activate'}}\\n      </button>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [ngClass]=\\\"{'highlight': selectedRowIndex == row.LeaveStatusID}\\\"\\n    (click)=\\\"highlight(row)\\\">\\n  </tr>\\n\\n</table>\\n<mat-paginator [pageSizeOptions]=\\\"[5,10,15]\\\" showFirstLastButtons></mat-paginator>\\n\\n<h2>{{formType}} Leave</h2>\\n<form [formGroup]=\\\"leaveForm\\\" #formDirective=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(formDirective)\\\">\\n  <div class=\\\"example-container\\\">\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"statusName\\\" placeholder=\\\"Status Name\\\" />\\n      <!-- [(ngModel)]=\\\"dataSource.LocationAddress\\\" name=\\\"dataSource.LocationAddress\\\" -->\\n      <mat-error *ngIf=\\\"leaveForm.controls['statusName'].invalid  && (leaveForm.controls['statusName'].dirty || leaveForm.controls['statusName'].touched)\\\">\\n        Leave name is required</mat-error>\\n    </mat-form-field>\\n\\n    <div class=\\\"w-100 float-left table-info px-4 py-2 text-right\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn-info mat-button mr-1\\\" [disabled]=\\\"!leaveForm.valid\\\" mat-raised-button><i class=\\\"fa fa-save\\\"\\n          aria-hidden=\\\"true\\\"></i><span class=\\\"action-btn\\\">{{formType}}\\n          Leave</span></button>\\n      <button type=\\\"button\\\" class=\\\"btn-danger mat-button\\\" (click)=\\\"formReset(formDirective);\\\"\\n        mat-raised-button><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> <span class=\\\"action-btn\\\">Cancel</span></button>\\n    </div>\\n  </div>\\n</form>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\\n.example-container {\\n  height: 400px;\\n  overflow: auto; }\\n\\n.highlight {\\n  background: #bef9bb; }\\n\\n.table-container {\\n  margin-top: 10px;\\n  max-height: 300px;\\n  overflow: auto; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormGroupDirective } from '@angular/forms';\nimport { MatPaginator, MatSort, MatDialog, MatSnackBar, MatTableDataSource } from '@angular/material';\nimport { LeavesService } from './leaves.service';\nimport { Title } from '@angular/platform-browser';\nimport { DialogComponent } from '../dialog/dialog.component';\n\n@Component({\n  selector: 'app-leaves',\n  templateUrl: './leaves.component.html',\n  styleUrls: ['./leaves.component.scss']\n})\nexport class LeavesComponent implements OnInit {\n\n  leaveForm = new FormGroup({\n    statusName: new FormControl('', [Validators.required, Validators.maxLength(100)])\n  });\n\n  selectedRowIndex: number = -1;\n  dataSource: any;\n  displayedColumns: string[] = ['StatusName', 'IsActive'];\n  formType: string = \"Add\";\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  constructor(public domainsService: LeavesService, public dialog: MatDialog, public snackBar: MatSnackBar, private titleService: Title) {\n    titleService.setTitle(\"LegaSys - Leave Status\");\n  }\n\n  ngOnInit() {\n    debugger;\n    this.RenderDataTable();\n  }\n\n  onSubmit(formDirective: FormGroupDirective) {\n    var leave = new LeaveModel();\n    leave.StatusName = this.leaveForm.controls['statusName'].value;\n    leave.LeaveStatusID = this.selectedRowIndex;\n\n    if (this.formType == \"Add\") {\n      this.domainsService.createLeave(leave).subscribe(res => {\n        if (res) {\n          this.snackBar.open(\"Leave added successfully\", \"Ok\", {\n            duration: 2000,\n          });\n          this.ngOnInit();\n        }\n      });\n    }\n    else {\n      this.domainsService.updateLeave(leave).subscribe(res => {\n        if (res) {\n          this.snackBar.open(\"Leave updated successfully\", \"Ok\", {\n            duration: 2000,\n          });\n          this.formType = \"Add\";\n          this.ngOnInit();\n        }\n      });\n    }\n\n    formDirective.resetForm();\n    this.leaveForm.reset();\n  }\n\n  status(id, isActive): void {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '325px',\n      data: { status: isActive ? \"Deactivate\" : \"Activate\", confirm: true }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) { this.changeStatus(id); }\n    });\n  }\n\n  changeStatus(id) {\n    this.domainsService.changeStatus(id).subscribe(res => { this.ngOnInit(); });\n  }\n\n  formReset(formDirective: FormGroupDirective) {\n    formDirective.resetForm();\n    this.leaveForm.reset();\n    this.formType = \"Add\";\n  }\n\n  highlight(row) {\n    this.selectedRowIndex = row.LeaveStatusID;\n    this.formType = \"Update\";\n    this.leaveForm.setValue({ statusName: row.StatusName });\n  }\n\n  RenderDataTable() {\n    this.domainsService.getAllLeaves()\n      .subscribe(\n        res => {\n          this.dataSource = new MatTableDataSource<LeaveModel>(this.dataSource);\n          this.dataSource.data = res;\n          \n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        },\n        error => {\n          console.log('There was an error while retrieving data !!!' + error);\n        });\n  }\n}\n\nexport class LeaveModel {\n  LeaveStatusID: number;\n  StatusName: string;\n  IsActive: boolean;\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule, MatFormFieldModule, MatSelectModule, MatIconModule, MatDialogModule, MatSnackBarModule, MatInputModule } from '@angular/material';\r\nimport { PageHeaderModule } from '../../../shared/modules/page-header/page-header.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { LeavesRoutingModule } from './leaves-routing.module';\r\nimport { LeavesComponent } from './leaves.component';\r\nimport { LeavesService } from './leaves.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatGridListModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatButtonModule, MatToolbarModule, MatFormFieldModule,\r\n        FormsModule, ReactiveFormsModule,\r\n        LeavesRoutingModule,\r\n        PageHeaderModule,\r\n        MatInputModule,\r\n        MatSelectModule, MatIconModule, MatDialogModule, MatSnackBarModule\r\n    ],\r\n    providers: [LeavesService],\r\n    declarations: [LeavesComponent]\r\n})\r\n\r\nexport class LeavesModule { }","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpClientModule } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { StorageService, SESSION_STORAGE } from 'angular-webstorage-service';\r\nimport { throwError } from 'rxjs';\r\nimport { LeaveModel } from './leaves.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LeavesService {\r\n\r\n    baseUrl: string = 'http://localhost:58164/leave/';\r\n\r\n    constructor(private http: HttpClient, @Inject(SESSION_STORAGE) private storage: StorageService,\r\n    ) { }\r\n\r\n    getToken() {\r\n        var token = this.storage.get('UserToken');\r\n        if (token != null) {\r\n            var bearerToken = 'Bearer ' + token.access_token;\r\n            let newHeaders = new HttpHeaders();\r\n            newHeaders = newHeaders.append('Authorization', bearerToken);\r\n            return newHeaders;\r\n        }\r\n    }\r\n\r\n    getAllLeaves() {\r\n        return this.http.get<LeaveModel[]>(this.baseUrl + \"getall\", { headers: this.getToken() })\r\n    }\r\n\r\n    getAllActiveLeaves() {\r\n        return this.http.get<LeaveModel[]>(this.baseUrl + \"getallactive\", { headers: this.getToken() })\r\n    }\r\n\r\n    changeStatus(id) {\r\n        return this.http.get(this.baseUrl + \"changestatus/\" + id, { headers: this.getToken() })\r\n    }\r\n\r\n    createLeave(leave: LeaveModel) {\r\n        return this.http.post(this.baseUrl + \"create\", leave, { headers: this.getToken() })\r\n            .pipe(\r\n                map(res => res),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n    updateLeave(leave: LeaveModel) {\r\n        return this.http.post(this.baseUrl + \"update\", leave, { headers: this.getToken() })\r\n            .pipe(\r\n                map(res => res),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n    errorHandler(error: Response) {\r\n        console.log(error);\r\n        return throwError(error);\r\n    }\r\n}\r\n"],"sourceRoot":""}