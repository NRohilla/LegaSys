{"version":3,"sources":["webpack:///./node_modules/@angular/http/fesm5/http.js","webpack:///./src/app/layout/Shared/shared.service.ts","webpack:///./src/app/layout/project/add/add.component.html","webpack:///./src/app/layout/project/add/add.component.scss","webpack:///./src/app/layout/project/add/add.component.ts","webpack:///./src/app/layout/project/edit/edit.component.html","webpack:///./src/app/layout/project/edit/edit.component.scss","webpack:///./src/app/layout/project/edit/edit.component.ts","webpack:///./src/app/layout/project/project-routing.module.ts","webpack:///./src/app/layout/project/project.component.html","webpack:///./src/app/layout/project/project.component.scss","webpack:///./src/app/layout/project/project.component.ts","webpack:///./src/app/layout/project/project.module.ts","webpack:///./src/app/layout/project/projenctModel.ts","webpack:///./src/app/layout/project/snack-bar-component-example/snack-bar-component-example.component.html","webpack:///./src/app/layout/project/snack-bar-component-example/snack-bar-component-example.component.scss","webpack:///./src/app/layout/project/snack-bar-component-example/snack-bar-component-example.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAE4E;AACd;AAC5B;AACkB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,wDAAwD;AACxD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,EAAE;AACrF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C,kCAAkC,EAAE;AACjF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uEAAuE,EAAE;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8CAA8C;AAC3F;AACA;AACA;AACA,0CAA0C,mDAAmD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2CAA2C;AACvF;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC,sDAAQ,gBAAgB,EAAE;AACnG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yEAAyE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA,6CAA6C,yBAAyB;AACtE,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA,aAAa,cAAc;AAC3B,IAAI;AACJ;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,gBAAgB;AAChB,QAAQ;AACR;AACA;AACA,QAAQ;AACR,gDAAgD;AAChD,8CAA8C,YAAY;AAC1D,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA,kDAAkD,sBAAsB;AACxE,wBAAwB,eAAe;AACvC,YAAY,WAAW,YAAY,yBAAyB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,oEAAoE;AAC/E;AACA,WAAW,IAAI;AACf;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,oCAAoC,8CAA8C;AAClF;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,IAAI;AACJ,8EAA8E;AAC9E,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oFAAoF;AACtH;AACA,0BAA0B,wDAAU;AACpC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B;AACrF,2DAA2D,gCAAgC;AAC3F;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA;AACA;AACA,yDAAyD,wCAAwC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC,mGAAmG,EAAE;AAC9I,SAAS;AACT;AACA;AACA,yDAAyD,8BAA8B;AACvF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,4DAA4D,4CAA4C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,kEAAkE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,sCAAsC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gDAAgD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,iFAAiF;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sDAAsD,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA;AACA,wBAAwB,yEAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ,4CAA4C;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yDAAyD;AACzD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA;AACA;AACA,gCAAgC,sBAAsB,EAAE;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR,6DAA6D;AAC7D,gDAAgD;AAChD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA,+CAA+C,8CAA8C,EAAE;AAC/F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA,eAAe;AACf,sBAAsB,cAAc;AACpC;AACA,kDAAkD,qBAAqB;AACvE,wBAAwB,eAAe;AACvC,YAAY,WAAW,qBAAqB,uBAAuB;AACnE;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yDAAyD;AACzD,4CAA4C;AAC5C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oDAAoD;AACtF;AACA,yBAAyB,wDAAU;AACnC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,IAAI,YAAY;AAChB,qFAAqF,WAAW;AAChG;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbqDAAqD,EAAE;AACrG;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB;AACrB,QAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,YAAY;AACvB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"project-project-module.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __metadata, __extends, __read, __spread } from 'tslib';\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n    BrowserXhr = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BrowserXhr);\n    return BrowserXhr;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported http methods.\n * @deprecated see https://angular.io/guide/http\n */\nvar RequestMethod;\n(function (RequestMethod) {\n    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n})(RequestMethod || (RequestMethod = {}));\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n * @deprecated see https://angular.io/guide/http\n */\nvar ReadyState;\n(function (ReadyState) {\n    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n})(ReadyState || (ReadyState = {}));\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseType;\n(function (ResponseType) {\n    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n})(ResponseType || (ResponseType = {}));\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n * @deprecated see https://angular.io/guide/http\n */\nvar ContentType;\n(function (ContentType) {\n    ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n    ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n    ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n    ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n    ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n    ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n    ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n})(ContentType || (ContentType = {}));\n/**\n * Define which buffer to use to store the response\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseContentType;\n(function (ResponseContentType) {\n    ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\n    ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\n    ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\n    ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\n})(ResponseContentType || (ResponseContentType = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Headers = /** @class */ (function () {\n    // TODO(vicb): any -> string|string[]\n    function Headers(headers) {\n        var _this = this;\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var index = line.indexOf(':');\n            if (index > 0) {\n                var name_1 = line.slice(0, index);\n                var value = line.slice(index + 1).trim();\n                headers.set(name_1, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    Headers.prototype.append = function (name, value) {\n        var values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    Headers.prototype.delete = function (name) {\n        var lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    Headers.prototype.get = function (name) {\n        var values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * Returns string of all headers.\n     */\n    // TODO(vicb): returns {[name: string]: string[]}\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var serialized = {};\n        this._headers.forEach(function (values, name) {\n            var split = [];\n            values.forEach(function (v) { return split.push.apply(split, __spread(v.split(','))); });\n            serialized[_this._normalizedNames.get(name)] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {@link Response Responses} for\n * mock responses (see {@link MockBackend}).\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {ResponseOptions, Response} from '@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseOptions = /** @class */ (function () {\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link ResponseOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create {@link Response Responses}.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {@link Response}\n * object.\n *\n * ### Example\n *\n * ```\n * import {BaseResponseOptions, Response} from '@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BaseResponseOptions = /** @class */ (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    BaseResponseOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseResponseOptions);\n    return BaseResponseOptions;\n}(ResponseOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {@link Request}.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar ConnectionBackend = /** @class */ (function () {\n    function ConnectionBackend() {\n    }\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Connection = /** @class */ (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar XSRFStrategy = /** @class */ (function () {\n    function XSRFStrategy() {\n    }\n    return XSRFStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\nfunction stringToArrayBuffer(input) {\n    var view = new Uint16Array(input.length);\n    for (var i = 0, strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var map = new Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach(function (param) {\n            var eqIdx = param.indexOf('=');\n            var _a = __read(eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], 2), key = _a[0], val = _a[1];\n            var list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * @deprecated see https://angular.io/guide/http\n **/\nvar QueryEncoder = /** @class */ (function () {\n    function QueryEncoder() {\n    }\n    QueryEncoder.prototype.encodeKey = function (key) { return standardEncoding(key); };\n    QueryEncoder.prototype.encodeValue = function (value) { return standardEncoding(value); };\n    return QueryEncoder;\n}());\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated see https://angular.io/guide/http\n */\nvar URLSearchParams = /** @class */ (function () {\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    URLSearchParams.prototype.clone = function () {\n        var clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    URLSearchParams.prototype.get = function (param) {\n        var storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {@link Request} and {@link Response}\n * https://fetch.spec.whatwg.org/#body\n */\nvar Body = /** @class */ (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     */\n    Body.prototype.text = function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(this._body));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(this._body));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return this._body;\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n      * Returns the request's body as a Blob, assuming that body exists.\n      */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return this._body;\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Response = /** @class */ (function (_super) {\n    __extends(Response, _super);\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\nfunction _getJsonpConnections() {\n    var w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n// Make sure not to evaluate this in a non-browser environment!\nvar BrowserJsonp = /** @class */ (function () {\n    function BrowserJsonp() {\n    }\n    // Construct a <script> element with the specified URL\n    BrowserJsonp.prototype.build = function (url) {\n        var node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    // Attach the <script> element to the DOM\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n    // Remove <script> element from the DOM\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild((node));\n        }\n    };\n    BrowserJsonp = __decorate([\n        Injectable()\n    ], BrowserJsonp);\n    return BrowserJsonp;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JSONPConnection = /** @class */ (function () {\n    /** @internal */\n    function JSONPConnection(req, _dom, baseResponseOptions) {\n        var _this = this;\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     */\n    JSONPConnection.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection;\n}());\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JSONPBackend = /** @class */ (function (_super) {\n    __extends(JSONPBackend, _super);\n    /** @internal */\n    function JSONPBackend(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    JSONPBackend.prototype.createConnection = function (request) {\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    JSONPBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserJsonp, ResponseOptions])\n    ], JSONPBackend);\n    return JSONPBackend;\n}(ConnectionBackend));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {@link MockConnection} may be interacted with in tests.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar XHRConnection = /** @class */ (function () {\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar CookieXSRFStrategy = /** @class */ (function () {\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\n * @Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * @deprecated see https://angular.io/guide/http\n */\nvar XHRBackend = /** @class */ (function () {\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    XHRBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserXhr, ResponseOptions,\n            XSRFStrategy])\n    ], XHRBackend);\n    return XHRBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar RequestOptions = /** @class */ (function () {\n    // TODO(Dzmitry): remove search when this.search is removed\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {@link RequestMethod RequestMethod.Get}\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link RequestOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create and send {@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BaseRequestOptions = /** @class */ (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    BaseRequestOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseRequestOptions);\n    return BaseRequestOptions;\n}(RequestOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jeffbcross): properly implement body accessors\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {@link Http} and\n * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n *\n * @Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Request = /** @class */ (function (_super) {\n    __extends(Request, _super);\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\nfunction urlEncodeParams(params) {\n    var searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = w /** TODO #9100 */['FormData'] || noop;\nvar Blob$1 = w /** TODO #9100 */['Blob'] || noop;\nvar ArrayBuffer$1 = w /** TODO #9100 */['ArrayBuffer'] || noop;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {@link Response} when a\n * response is received.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '@angular/http';\n * import {map} from 'rxjs/operators';\n *\n * @Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .pipe(map(res => res.json()))\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Http = /** @class */ (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    Http.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    Http = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Http);\n    return Http;\n}());\n/**\n * @deprecated see https://angular.io/guide/http\n */\nvar Jsonp = /** @class */ (function (_super) {\n    __extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     *\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    Jsonp = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Jsonp);\n    return Jsonp;\n}(Http));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar HttpModule = /** @class */ (function () {\n    function HttpModule() {\n    }\n    HttpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                BrowserXhr,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                XHRBackend,\n                { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n            ],\n        })\n    ], HttpModule);\n    return HttpModule;\n}());\n/**\n * The module that includes jsonp's providers\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JsonpModule = /** @class */ (function () {\n    function JsonpModule() {\n    }\n    JsonpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                BrowserJsonp,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                JSONPBackend,\n            ],\n        })\n    ], JsonpModule);\n    return JsonpModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated see https://angular.io/guide/http\n */\nvar VERSION = new Version('6.1.10');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserJsonp as ɵangular_packages_http_http_e, Body as ɵangular_packages_http_http_f, _createDefaultCookieXSRFStrategy as ɵangular_packages_http_http_a, httpFactory as ɵangular_packages_http_http_b, jsonpFactory as ɵangular_packages_http_http_c, BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION };\n//# sourceMappingURL=http.js.map\n","import { Injectable, Component, OnInit, Inject } from '@angular/core';\r\nimport { StorageService, SESSION_STORAGE } from 'angular-webstorage-service';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { HttpClient, HttpClientModule, HttpResponse, HttpRequest, HttpHeaders } from '@angular/common/http';\r\nimport { Project } from '../project/projenctModel';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SharedService {\r\n    dialogData: any;\r\n    headers: any;\r\n    url: 'http://localhost:58164/project';\r\n    constructor(private http: HttpClient, @Inject(SESSION_STORAGE) private storage: StorageService) {\r\n    }\r\n\r\n    // CreateHeader() {\r\n    //     const  headers = new Headers();\r\n    //     headers.append(this.storage.get('UserToken').access_token, '');\r\n    //     }\r\n    CreateHeader() {\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n\r\n    }\r\n\r\n\r\n    public getAllProject() {\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        //  return  this.http.get(this.url + 'getall', { header : this.CreateHeader()});\r\n        return this.http.get('http://localhost:58164/project/getall', this.headers);\r\n    }\r\n    public addProject(issue: any) {\r\n        return this.http.post('http://localhost:58164/project/create', issue, this.headers);\r\n    }\r\n    // public editProject(issue: any) {\r\n    //     const headers = new Headers();\r\n    //     headers.append(this.storage.get('UserToken').access_token, '');\r\n    //     return this.http.post('http://localhost:58164/project/update', issue, this.headers);\r\n    // }\r\n    public GetProjectById(id) {\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.get('http://localhost:58164/project/' + id, this.headers);\r\n    }\r\n    public DeletProject(id) {\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.get('http://localhost:58164/project/' + id + '/delete', this.headers);\r\n    }\r\n    public GetClient() {\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.get('http://localhost:58164/client/GetAllClient', this.headers);\r\n    }\r\n\r\n    public GetAllTechnologyByDomain(id: any) {\r\n        debugger;\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.get('http://localhost:58164/project/getalltechnologybydomain/' + id, this.headers);\r\n    }\r\n    // public GetAllTechnologyByDomain(id:any) {\r\n    //     debugger;\r\n    //     const headers = new Headers();\r\n    //     headers.append(this.storage.get('UserToken').access_token, '');\r\n    //     return this.http.get('http://localhost:58164/project/getalltechnologybydomain/'+id, this.headers);\r\n    // }\r\n\r\n    public getallclientstatus() {\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.get('http://localhost:58164/api/Client/GetAllClientStatus', this.headers);\r\n    }\r\n    public getallshift() {\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.get('http://localhost:58164/shift/getall', this.headers);\r\n    }\r\n    public getalllocation() {\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.get('http://localhost:58164/location/getall', this.headers);\r\n    }\r\n    public getallreportinghead() {\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.get('http://localhost:58164/resource/getall', this.headers);\r\n    }\r\n    public getallrole() {\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.get('http://localhost:58164/role/getall', this.headers);\r\n    }\r\n    //new\r\n    public getalltechdomains() {\r\n        debugger;\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.get('http://localhost:58164/project/GetAllTechDomains', this.headers);\r\n    }\r\n\r\n\r\n    public updateProject(issue: any) {\r\n        debugger;\r\n        console.log(issue);\r\n        const headers = new Headers();\r\n        headers.append(this.storage.get('UserToken').access_token, '');\r\n        return this.http.post('http://localhost:58164/project/update', issue, this.headers);\r\n    }\r\n}\r\n","module.exports = \"<!-- <div class=\\\"w-100 float-left table-info px-4 py-2 text-right\\\"></div> -->\\r\\n<app-page-header [heading]=\\\"'Add Project '\\\" [icon]=\\\"'fa-bar-chart-o'\\\"></app-page-header>\\r\\n<!-- Title of an Card -->\\r\\n<!-- <mat-card-title class=\\\"bg-info w-100 float-left table-info px-4 py-2 text-left\\\">\\r\\n       Add Project\\r\\n    </mat-card-title> -->\\r\\n\\r\\n<!-- Actual content starts from here -->\\r\\n<!-- <mat-card-content> -->\\r\\n\\r\\n    \\r\\n<form [formGroup]=\\\"regiForm\\\" (ngSubmit)=\\\"onFormSubmit(regiForm.value)\\\" class=\\\"add-project table-active\\\">\\r\\n        <div class=\\\"card-header bg-info\\\">\\r\\n                <mat-label class=\\\"labeltext text-white text-uppercase\\\">Project Info </mat-label>\\r\\n            </div>\\r\\n    <div class=\\\"row m-0\\\">\\r\\n        <div class=\\\"col-lg-6 col-md-6 colsm-6 col-12 float-left\\\">\\r\\n            <mat-form-field class=\\\"w-100 mt-4\\\">\\r\\n                <input formControlName=\\\"Title\\\" matInput placeholder=\\\"Title\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-error>\\r\\n                <span *ngIf=\\\"!regiForm.get('Title').valid && regiForm.get('Title').touched\\\">Please enter Title Name </span>\\r\\n            </mat-error>\\r\\n        </div>\\r\\n        <!-- testing 27112018 -->\\r\\n        <div class=\\\"col-lg-6 col-md-6 colsm-6 col-12 float-left\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n                <textarea formControlName=\\\"Description\\\" matInput placeholder=\\\"Description\\\" matTextareaAutosize\\r\\n                    matAutosizeMinRows=\\\"2\\\"></textarea>\\r\\n\\r\\n            </mat-form-field>\\r\\n            <mat-error>\\r\\n                <span *ngIf=\\\"!regiForm.get('Description').valid && regiForm.get('Description').touched\\\">Please\\r\\n                    enter Description </span>\\r\\n            </mat-error>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row m-0\\\">\\r\\n        <div class=\\\"col-lg-6 col-md-6 colsm-6 col-12 float-left\\\">\\r\\n            <!-- <mat-form-field class=\\\"w-100\\\">\\r\\n                <input formControlName=\\\"DomainName\\\" matInput placeholder=\\\"DomainName\\\">\\r\\n            </mat-form-field> -->\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n                <mat-select formControlName=\\\"ProjectDomain_ID\\\" placeholder=\\\"Select Technical Domain\\\">\\r\\n                    <mat-option>-- Select Technical Domain--</mat-option>\\r\\n                    <mat-option *ngFor=\\\"let technologydetail of technologydetails\\\" [value]=\\\"technologydetail.TechDomainID\\\">\\r\\n                        {{technologydetail.DomainName}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error>\\r\\n                    <span *ngIf=\\\"!regiForm.get('ProjectDomain_ID').valid && regiForm.get('ProjectDomain_ID').touched\\\">Please\\r\\n                        select technology </span>\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n            <!-- <mat-error>\\r\\n                <span *ngIf=\\\"!regiForm.get('ProjectDomain_ID').valid && regiForm.get('ProjectDomain_ID').touched\\\">Please enter\\r\\n                    Domain Name </span>\\r\\n            </mat-error> -->\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-12 float-left\\\">\\r\\n            <mat-form-field class=\\\"w-100\\\">\\r\\n                <mat-select formControlName=\\\"Client_ID\\\" placeholder=\\\"Select Client\\\">\\r\\n                    <mat-option>-- Select Client --</mat-option>\\r\\n                    <mat-option *ngFor=\\\"let client of clientdetails\\\" [value]=\\\"client.ClientDetailID\\\">\\r\\n                        {{client.ClientName}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error>\\r\\n                    <span *ngIf=\\\"!regiForm.get('Client_ID').valid && regiForm.get('Client_ID').touched\\\">Please\\r\\n                        select client </span>\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row m-0\\\">\\r\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-12 float-left\\\">\\r\\n            <!-- <mat-form-field class=\\\"w-100\\\">\\r\\n                <mat-select formControlName=\\\"TechnologyID\\\" placeholder=\\\"Select Technology\\\">\\r\\n                    <mat-option>-- Select Technology --</mat-option>\\r\\n                    <mat-option *ngFor=\\\"let technology of technologylist\\\" [value]=\\\"technology.TechnologyID\\\">\\r\\n                        {{technology.Name}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n                <mat-error> \\r\\n                   <span *ngIf=\\\"!regiForm.get('TechnologyID').valid && regiForm.get('TechnologyID').touched\\\">Please\\r\\n                        select any technology </span> \\r\\n                </mat-error>\\r\\n            </mat-form-field>-->\\r\\n        </div>\\r\\n    </div> \\r\\n\\r\\n\\r\\n    \\r\\n    <div class=\\\"w-100 float-left table-info px-4 py-2 text-right\\\">            \\r\\n            <button mat-button class=\\\"btn btn-secondary\\\" (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\"><i class=\\\"fa fa-times\\\"  aria-hidden=\\\"true\\\"></i> Cancel </button>\\r\\n            <button mat-button class=\\\"btn btn-info mx-2\\\" [disabled]=\\\"!regiForm.valid || regiForm.get('ProjectDomain_ID').value==0 || regiForm.get('Client_ID').value==0 \\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Submit</button>\\r\\n        <!-- <div class=\\\"px-2 float-right\\\"> -->\\r\\n        \\r\\n        <!-- </div> -->\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n<!-- </mat-card-content> -->\\r\\n\\r\\n<!-- testing 27112018 -->\\r\\n<!-- //commented for update on GIT 06/12/2018 -->\"","module.exports = \".container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 450px; }\\n\\n.container > * {\\n  width: 100%; }\\n\\n.form {\\n  display: flex;\\n  padding-top: 6px; }\\n\\n.mat-form-field {\\n  font-size: 16px;\\n  flex-grow: 1; }\\n\\n.add-project textarea {\\n  height: 44px !important;\\n  min-height: 44px !important; }\\n\\n.labeltext {\\n  margin-left: 40%; }\\n\"","import { MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { SharedService } from '../../Shared/shared.service';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Project } from '../projenctModel';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { Observable } from 'rxjs';\r\nimport { FormBuilder, FormGroup, FormsModule, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { SnackBarComponentExampleComponent } from '../../project/snack-bar-component-example/snack-bar-component-example.component';\r\n\r\n@Component({\r\n    selector: 'app-add',\r\n    templateUrl: './add.component.html',\r\n    styleUrls: ['./add.component.scss'],\r\n    animations: [routerTransition()],\r\n})\r\n\r\nexport class AddComponent implements OnInit {\r\n    selectedValue: String = '';\r\n    regiForm: FormGroup;\r\n    FirstName: String = '';\r\n    LastName: String = '';\r\n    Address: String = '';\r\n    DOB: Date = null;\r\n    Gender: String = '';\r\n    Blog: String = '';\r\n    Email: String = '';\r\n    IsAccepted: Number = 0;\r\n    //testing 27/11/2018\r\n    // constructor(public dialogRef: MatDialogRef<AddComponent>,\r\n    constructor(\r\n        //@Inject(MAT_DIALOG_DATA) public data: Project,\r\n        public dataService: SharedService, private fb: FormBuilder, private router: Router, public snackBar: MatSnackBar) {\r\n        this.regiForm = fb.group({\r\n            'Title': [\"\", Validators.required],\r\n            'Description': [\"\", Validators.compose([Validators.required, Validators.maxLength(500)])],\r\n\r\n            //'DomainName' : [null, Validators.required],\r\n\r\n            'Client_ID': [0, Validators.required],\r\n            'ProjectDomain_ID': [0, Validators.required],\r\n        });\r\n        this.getClient();\r\n        //this.GetAllDomain();\r\n        this.GetAllTechdomains();\r\n    }\r\n    clientdetails: any;\r\n    technologydetails: any;\r\n    technologylist: any;\r\n\r\n    formControl = new FormControl('', [\r\n        Validators.required\r\n        // Validators.email,\r\n    ]);\r\n    ngOnInit() { }\r\n    getErrorMessage() {\r\n        return this.formControl.hasError('required') ? 'Required field' :\r\n            this.formControl.hasError('email') ? 'Not a valid email' :\r\n                '';\r\n    }\r\n    onSelect(id) {\r\n        debugger;\r\n        this.dataService.GetAllTechnologyByDomain(id).subscribe(\r\n            res => {\r\n                this.technologylist = res;\r\n\r\n            }\r\n        );\r\n    }\r\n    onFormSubmit(form: NgForm) {\r\n        console.log(this.regiForm.value);\r\n        debugger;\r\n        if (form['Title'] != \"\" && form['Client_ID'] != 0 && form['ProjectDomain_ID'] != 0) {\r\n            this.dataService.addProject(form).subscribe(\r\n                res => {\r\n                    sessionStorage.setItem('message', 'added');\r\n                    //this.openSnackBar();\r\n                    this.snackBar.open('Project added successfully', 'ok', { duration: 2500 });\r\n                    this.dataService.getAllProject();\r\n                    this.router.navigate(['project']);\r\n                });\r\n        }\r\n        else\r\n            return;\r\n\r\n\r\n    }\r\n\r\n    public getClient() {\r\n        this.dataService.GetClient().subscribe(\r\n            res => {\r\n                this.clientdetails = res;\r\n            });\r\n    }\r\n    public GetAllTechdomains() {\r\n        this.dataService.getalltechdomains().subscribe(\r\n            res => {\r\n                this.technologydetails = res;\r\n            });\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.router.navigate(['project']);\r\n    }\r\n    openSnackBar() {\r\n        this.snackBar.openFromComponent(SnackBarComponentExampleComponent, {\r\n            duration: 2000,\r\n        });\r\n    }\r\n}\r\n\r\n\r\n////reedited/testing for push on git 29/11/2018\r\n","module.exports = \"<app-page-header [heading]=\\\"'Project Details'\\\" [icon]=\\\"'fa-bar-chart-o'\\\"></app-page-header>\\r\\n\\r\\n<div [@routerTransition]>\\r\\n        <div *ngIf=\\\"projectdetails\\\">\\r\\n                <form class=\\\"mat-dialog-content table-active\\\" (ngSubmit)=\\\"submit\\\" #formControl=\\\"ngForm\\\">\\r\\n                        <div class=\\\"form contactlist-container mat-elevation-z8\\\">\\r\\n                                <mat-tab-group class=\\\"client-detail \\\" (selectedTabChange)=\\\"onLinkClick($event)\\\"\\r\\n                                        mat-align-tabs=\\\"left\\\">\\r\\n\\r\\n                                        <mat-tab label=\\\"Summary\\\">\\r\\n                                                <!-- <div class=\\\"py-4 px-1\\\">\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                                <div class=\\\"col-lg-12\\\" style=\\\"margin-bottom: 1%;\\\">\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-md-2\\\" style=\\\"display:none\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <mat-label>Project ID</mat-label>\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.ProjectID\\\"\\r\\n                                                                                                        name=\\\"ProjectID1\\\"\\r\\n                                                                                                        required>\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <mat-label>Title</mat-label>\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.Title\\\"\\r\\n                                                                                                        name=\\\"Title1\\\"\\r\\n                                                                                                        required>\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <mat-label>Description</mat-label>\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.Description\\\"\\r\\n                                                                                                        name=\\\"ProjectDescription1\\\"\\r\\n                                                                                                        required>\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <mat-label>Domain</mat-label>\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.DomainName\\\"\\r\\n                                                                                                        name=\\\"ProjectDomainName\\\">\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                                <div class=\\\"col-lg-12\\\" style=\\\"margin-bottom: 1%;\\\">\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <mat-label>Project\\r\\n                                                                                                        Start Date</mat-label>\\r\\n                                                                                                <input matInput\\r\\n                                                                                                        [matDatepicker]=\\\"startpicker1\\\"\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.StartDate\\\"\\r\\n                                                                                                        name=\\\"ProjectStartDate\\\"\\r\\n                                                                                                        placeholder=\\\"Choose a date\\\">\\r\\n                                                                                                <mat-datepicker-toggle\\r\\n                                                                                                        matSuffix [for]=\\\"startpicker\\\"></mat-datepicker-toggle>\\r\\n                                                                                                <mat-datepicker\\r\\n                                                                                                        #startpicker></mat-datepicker>\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <mat-label>Project End\\r\\n                                                                                                        Date</mat-label>\\r\\n                                                                                                <input matInput\\r\\n                                                                                                        [matDatepicker]=\\\"endpicker2\\\"\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.EndDate\\\"\\r\\n                                                                                                        name=\\\"ProjectEndDate\\\"\\r\\n                                                                                                        placeholder=\\\"Choose a date\\\">\\r\\n                                                                                                <mat-datepicker-toggle\\r\\n                                                                                                        matSuffix [for]=\\\"endpicker\\\" [disabled]=\\\"disableSummary\\\"></mat-datepicker-toggle>\\r\\n                                                                                                <mat-datepicker\\r\\n                                                                                                        #endpicker></mat-datepicker>\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <mat-label>Duration</mat-label>\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.Duration\\\"\\r\\n                                                                                                        name=\\\"ProjectDuration\\\"\\r\\n                                                                                                        required>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n\\r\\n                                                </div> -->\\r\\n                                                <div class=\\\"card mb-3\\\">\\r\\n                                                        <div class=\\\"w-100 float-left table-active py-4 px-2\\\">\\r\\n                                                                <div class=\\\"row mx-0 my-2\\\">\\r\\n                                                                        <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                                                                                <div class=\\\"summary-lebel float-left\\\"><strong>Project\\r\\n                                                                                                Title :</strong></div>\\r\\n                                                                                <div class=\\\"float-left\\\">{{projectdetails.Title}}</div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                                                                                <div class=\\\"summary-lebel float-left\\\"><strong>Description :</strong></div>\\r\\n                                                                                <div class=\\\"float-left\\\">{{projectdetails.Description}}</div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                                                                                <div class=\\\"summary-lebel float-left\\\"><strong>Domain Name:</strong></div>\\r\\n                                                                                <div class=\\\"float-left\\\">{{projectdetails.DomainName}}</div>\\r\\n                                                                        </div>\\r\\n\\r\\n                                                                </div>\\r\\n                                                                <div class=\\\"row mx-0 my-2\\\">\\r\\n                                                                        <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                                                                                <div class=\\\"summary-lebel float-left\\\"><strong>Start Date :</strong></div>\\r\\n                                                                                <div class=\\\"float-left\\\">{{projectdetails.StartDate}}</div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                                                                                <div class=\\\"summary-lebel float-left\\\"><strong>End Date :</strong></div>\\r\\n                                                                                <div class=\\\"float-left\\\">{{projectdetails.EndDate}}</div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"col-lg-4 col-md-4 col-sm-12 col-12 float-left\\\">\\r\\n                                                                                <div class=\\\"summary-lebel float-left\\\"><strong>Duration :</strong></div>\\r\\n                                                                                <div class=\\\"float-left\\\">{{projectdetails.Duration}}</div>\\r\\n                                                                        </div>\\r\\n\\r\\n                                                                </div>\\r\\n\\r\\n                                                        </div>\\r\\n\\r\\n                                                </div>\\r\\n                                        </mat-tab>\\r\\n\\r\\n                                        <!-- Project Tab -->\\r\\n                                        <mat-tab label=\\\"Project Information\\\">\\r\\n                                                <div class=\\\"py-4 px-1\\\">\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                                <div class=\\\"col-lg-12\\\" style=\\\"margin-bottom: 1%;\\\">\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-md-2\\\" style=\\\"display:none\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>:</strong></label>\\r\\n                                                                                                <mat-label>Project ID</mat-label>\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disable\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.ProjectID\\\"\\r\\n                                                                                                        name=\\\"ProjectID\\\"\\r\\n                                                                                                        required>\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\" *ngIf=\\\"disable\\\"><strong>Title: </strong></label>\\r\\n                                                                                                <mat-label *ngIf=\\\"!disable\\\">Title</mat-label>\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disable\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.Title\\\"\\r\\n                                                                                                        name=\\\"Title\\\"\\r\\n                                                                                                        required>\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\" *ngIf=\\\"disable\\\"><strong>Description: </strong></label>\\r\\n                                                                                                <mat-label *ngIf=\\\"!disable\\\">Description</mat-label>\\r\\n                                                                                                <textarea matInput\\r\\n                                                                                                        [disabled]=\\\"disable\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.Description\\\"\\r\\n                                                                                                        name=\\\"ProjectDescription\\\"\\r\\n                                                                                                        required style=\\\"height:25px\\\"></textarea>\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\" *ngIf=\\\"disable\\\"><strong>Technical Domain: </strong></label>\\r\\n                                                                                                <mat-label *ngIf=\\\"!disable\\\">Technical\\r\\n                                                                                                        Domain</mat-label>\\r\\n                                                                                                <mat-select name=\\\"ProjectDomain_ID\\\"                                                                                                        \\r\\n                                                                                                        [placeholder]=\\\"GetPlaceHolder('ProjectDomain_ID')\\\"\\r\\n                                                                                                        [disabled]=\\\"disable\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.ProjectDomain_ID\\\">\\r\\n                                                                                                        <mat-option>--\\r\\n                                                                                                                Select\\r\\n                                                                                                                Technical\\r\\n                                                                                                                Domain--</mat-option>\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                *ngFor=\\\"let technologydetail of TechnicalDomainList\\\"\\r\\n                                                                                                                [value]=\\\"technologydetail.TechDomainID\\\">\\r\\n                                                                                                                {{technologydetail.DomainName}}\\r\\n                                                                                                        </mat-option>\\r\\n                                                                                                </mat-select>\\r\\n                                                                                                <!-- <input matInput #input class=\\\"form-control\\\"  [disabled]=\\\"disable\\\" [(ngModel)]=\\\"projectdetails.DomainName\\\" name=\\\"ProjectDomainName\\\" > -->\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                                <div class=\\\"col-lg-12\\\" style=\\\"margin-bottom: 1%;\\\">\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <!-- [(ngModel)]=\\\"projectdetails.StartDate\\\"  -->\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\" *ngIf=\\\"disable\\\"><strong>Project Start Date:</strong></label>\\r\\n                                                                                                <mat-label *ngIf=\\\"!disable\\\">Project\\r\\n                                                                                                        Start Date</mat-label>\\r\\n                                                                                                <input matInput\\r\\n                                                                                                        [matDatepicker]=\\\"startpicker\\\"\\r\\n                                                                                                        [disabled]=\\\"disable\\\"\\r\\n                                                                                                        name=\\\"ProjectStartDate\\\"\\r\\n                                                                                                        [placeholder]=\\\"GetPlaceHolder('ProjectStartDate')\\\"\\r\\n                                                                                                        [value]=\\\"date\\\">\\r\\n                                                                                                <mat-datepicker-toggle\\r\\n                                                                                                        matSuffix [for]=\\\"startpicker\\\"></mat-datepicker-toggle>\\r\\n                                                                                                <mat-datepicker\\r\\n                                                                                                        #startpicker></mat-datepicker>\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\" *ngIf=\\\"disable\\\" ><strong> Project End Date:</strong></label>\\r\\n                                                                                                <mat-label *ngIf=\\\"!disable\\\">Project End\\r\\n                                                                                                        Date</mat-label>\\r\\n                                                                                                <input matInput\\r\\n                                                                                                        [matDatepicker]=\\\"endpicker\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.EndDate\\\"\\r\\n                                                                                                        [disabled]=\\\"disable\\\"\\r\\n                                                                                                        name=\\\"ProjectEndDate\\\"\\r\\n                                                                                                        [placeholder]=\\\"GetPlaceHolder('ProjectEndDate')\\\"\\r\\n                                                                                                        [value]=\\\"date.value\\\">\\r\\n                                                                                                <mat-datepicker-toggle\\r\\n                                                                                                        matSuffix [for]=\\\"endpicker\\\"></mat-datepicker-toggle>\\r\\n                                                                                                <mat-datepicker\\r\\n                                                                                                        #endpicker></mat-datepicker>\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\" *ngIf=\\\"disable\\\"><strong>Duration:</strong></label>\\r\\n                                                                                                <mat-label *ngIf=\\\"!disable\\\">Duration</mat-label>\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disable\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.Duration\\\"\\r\\n                                                                                                        name=\\\"ProjectDuration\\\"\\r\\n                                                                                                        required>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n\\r\\n                                                </div>\\r\\n                                        </mat-tab>\\r\\n                                        <!-- Client Tab -->\\r\\n                                        <mat-tab label=\\\"Client Information\\\">\\r\\n                                                <div class=\\\"py-4 px-1\\\">\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                                <div class=\\\"col-lg-12\\\" style=\\\"margin-bottom: 1%;\\\">\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-md-2\\\" style=\\\"display:none\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>:</strong></label>\\r\\n                                                                                                <mat-label>ID</mat-label>\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.Client_ID\\\"\\r\\n                                                                                                        name=\\\"Client_ID\\\">\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Name:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Name</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.ClientName\\\"\\r\\n                                                                                                        name=\\\"ClientName\\\">\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Address:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Address</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.Address\\\"\\r\\n                                                                                                        name=\\\"Address\\\">\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Country:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Country</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.Country\\\"\\r\\n                                                                                                        name=\\\"Country\\\">\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Client Status:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Client\\r\\n                                                                                                        Status</mat-label> -->\\r\\n\\r\\n                                                                                                <mat-select \\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"projectdetails.ClientStatus\\\"\\r\\n                                                                                                        name=\\\"Status\\\">\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                [value]=\\\"true\\\">Active</mat-option>\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                [value]=\\\"false\\\">InActive</mat-option>\\r\\n                                                                                                </mat-select>\\r\\n                                                                                                <!-- <mat-select [(ngModel)]=\\\"resourcedetails.Resource_IsActive\\\"\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        name=\\\"Resource_IsActive\\\">\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                [value]=\\\"true\\\">Active</mat-option>\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                [value]=\\\"false\\\">InActive</mat-option>\\r\\n                                                                                                </mat-select> -->\\r\\n                                                                                                <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>CoClient :</strong></label>\\r\\n                                                                                                <!-- <mat-label>CoClient</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.CoClient\\\"\\r\\n                                                                                                        name=\\\"CoClient\\\">\\r\\n\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>CoClient2:</strong></label>\\r\\n                                                                                                <!-- <mat-label>CoClient2</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.CoClient2\\\"\\r\\n                                                                                                        name=\\\"CoClient2\\\">\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>CoClient2 Email:</strong></label>\\r\\n                                                                                                <!-- <mat-label>CoClient2\\r\\n                                                                                                        Email</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.EmailID2\\\"\\r\\n                                                                                                        name=\\\"EmailID2\\\">\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>CoClient3:</strong></label>\\r\\n                                                                                                <!-- <mat-label>CoClient3</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.CoClient3\\\"\\r\\n                                                                                                        name=\\\"CoClient3\\\">\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>CoClient3 Email:</strong></label>\\r\\n                                                                                                <!-- <mat-label>CoClient3\\r\\n                                                                                                        Email</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.EmailID3\\\"\\r\\n                                                                                                        name=\\\"EmailID3\\\">\\r\\n\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>CoClient 4:</strong></label>\\r\\n                                                                                                <!-- <mat-label>CoClient 4</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.CoClient4\\\"\\r\\n                                                                                                        name=\\\"CoClient4\\\">\\r\\n\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>CoClient4 Email ID:</strong></label>\\r\\n                                                                                                <!-- <mat-label>CoClient4\\r\\n                                                                                                        Email ID</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"clientdetails.EmailID4\\\"\\r\\n                                                                                                        name=\\\"EmailID4\\\">\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n\\r\\n                                                </div>\\r\\n                                        </mat-tab>\\r\\n                                        <!-- Resource Tab -->\\r\\n                                        <mat-tab label=\\\"Resource Information\\\">\\r\\n                                                <div class=\\\"py-4 px-1\\\">\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                                <div class=\\\"col-lg-12\\\" style=\\\"margin-bottom: 1%;\\\">\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Name :</strong></label>\\r\\n                                                                                                <!-- <mat-label>Name</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"resourcedetails.ResourceFirstname\\\"\\r\\n                                                                                                        name=\\\"ResourceName\\\">\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Total Experience:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Total\\r\\n                                                                                                        Experience</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"resourcedetails.TotalExp\\\"\\r\\n                                                                                                        name=\\\"TotalExp\\\">\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Email ID:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Email ID</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"resourcedetails.ResourceEmailId\\\"\\r\\n                                                                                                        name=\\\"ResourceEmailId\\\">\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Mobile Number:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Mobile\\r\\n                                                                                                        Number</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"resourcedetails.ResourceMobileNumber\\\"\\r\\n                                                                                                        name=\\\"ResourceMobileNumber\\\">\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                        <!-- Resource Tab -->\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Status:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Status</mat-label> -->\\r\\n\\r\\n                                                                                                <mat-select [(ngModel)]=\\\"resourcedetails.Resource_IsActive\\\"\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        name=\\\"Resource_IsActive\\\">\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                [value]=\\\"true\\\">Active</mat-option>\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                [value]=\\\"false\\\">InActive</mat-option>\\r\\n                                                                                                </mat-select>\\r\\n\\r\\n\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Remarks:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Remarks</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"resourcedetails.Remarks\\\"\\r\\n                                                                                                        name=\\\"Remarks\\\">\\r\\n\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <!-- <mat-label>Shift</mat-label> -->\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Shift:</strong></label>\\r\\n\\r\\n                                                                                                <mat-select \\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"resourcedetails.Master_Shift_ID\\\"\\r\\n                                                                                                        name=\\\"Master_Shift_ID\\\">\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                *ngFor=\\\"let shift of Shift\\\"\\r\\n                                                                                                                [value]=\\\"shift.ShiftID\\\">\\r\\n                                                                                                                {{shift.StartTimeIST}}-{{shift.EndTimeIST}}\\r\\n                                                                                                        </mat-option>\\r\\n                                                                                                </mat-select>\\r\\n\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <!-- <mat-label>Location</mat-label> -->\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Location:</strong></label>\\r\\n\\r\\n                                                                                                <mat-select \\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"resourcedetails.Master_Location_ID\\\"\\r\\n                                                                                                        name=\\\"Master_Location\\\">\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                *ngFor=\\\"let location of Location\\\"\\r\\n                                                                                                                [value]=\\\"location.LocationID\\\">\\r\\n                                                                                                                {{location.LocationAddress}}\\r\\n                                                                                                        </mat-option>\\r\\n                                                                                                </mat-select>\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Reporting Head:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Reporting\\r\\n                                                                                                        Head</mat-label> -->\\r\\n\\r\\n                                                                                                <mat-select \\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"resourcedetails.ReportingHead_ID\\\"\\r\\n                                                                                                        name=\\\"ReportingHead_ID\\\">\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                *ngFor=\\\"let reportingHead of ReportingHead\\\"\\r\\n                                                                                                                [value]=\\\"reportingHead.UserDetailID\\\">\\r\\n                                                                                                                {{reportingHead.Firstname}}\\r\\n                                                                                                                {{reportingHead.Middlename}}\\r\\n                                                                                                                {{reportingHead.Lastname}}\\r\\n                                                                                                        </mat-option>\\r\\n                                                                                                </mat-select>\\r\\n\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Role:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Role</mat-label> -->\\r\\n\\r\\n                                                                                                <mat-select \\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"resourcedetails.Master_Role_ID\\\"\\r\\n                                                                                                        name=\\\"Master_Role\\\">\\r\\n                                                                                                        <mat-option\\r\\n                                                                                                                *ngFor=\\\"let role of Role\\\"\\r\\n                                                                                                                [value]=\\\"role.UserRoleID\\\">\\r\\n                                                                                                                {{role.RoleName}}\\r\\n                                                                                                        </mat-option>\\r\\n                                                                                                </mat-select>\\r\\n\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n\\r\\n                                                </div>\\r\\n                                        </mat-tab>\\r\\n                                        <!--   -->\\r\\n                                        <mat-tab label=\\\"Task Information\\\">\\r\\n                                                <div class=\\\"py-4 px-1\\\">\\r\\n                                                        <div class=\\\"form-group\\\">\\r\\n                                                                <div class=\\\"col-lg-12\\\" style=\\\"margin-bottom: 1%;\\\">\\r\\n                                                                        <div class=\\\"row\\\">\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Title:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Title</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"taskdetails.TaskTitle\\\"\\r\\n                                                                                                        name=\\\"TaskTitle\\\"\\r\\n                                                                                                        [pattern]=\\\"'^[a-zA-Z \\\\-\\\\']$'\\\">\\r\\n                                                                                                <!-- <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error> -->\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Description:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Description</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"taskdetails.TaskDescription\\\"\\r\\n                                                                                                        name=\\\"TaskDescription\\\">\\r\\n                                                                                                <!-- <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error> -->\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                                <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-12 float-left\\\">\\r\\n                                                                                        <mat-form-field class=\\\"w-100\\\">\\r\\n                                                                                                <label class=\\\"summary-lebel float-left\\\"><strong>Task Attachment:</strong></label>\\r\\n                                                                                                <!-- <mat-label>Task\\r\\n                                                                                                        Attachment</mat-label> -->\\r\\n                                                                                                <input matInput #input\\r\\n                                                                                                        [disabled]=\\\"disableSummary\\\"\\r\\n                                                                                                        [(ngModel)]=\\\"taskdetails.TaskAttachmentID\\\"\\r\\n                                                                                                        name=\\\"TaskAttachmentID\\\">\\r\\n                                                                                                <!-- <mat-error *ngIf=\\\"formControl.invalid\\\">{{getErrorMessage()}}</mat-error> -->\\r\\n                                                                                        </mat-form-field>\\r\\n                                                                                </div>\\r\\n                                                                        </div>\\r\\n\\r\\n                                                                </div>\\r\\n                                                        </div>\\r\\n\\r\\n                                                </div>\\r\\n                                        </mat-tab>\\r\\n\\r\\n                                </mat-tab-group>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                </form>\\r\\n                <div class=\\\"w-100 float-left d-block table-info px-4 py-2 table-info\\\">\\r\\n                        <div class=\\\"px-2 float-right\\\">\\r\\n                                <button mat-button class=\\\"btn btn-secondary\\\" tabindex=\\\"-1\\\" (click)=\\\"onNoClick()\\\"><i\\r\\n                                                class=\\\"fa fa-backward\\\" aria-hidden=\\\"true\\\"></i> Back</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"px-2 float-right\\\">\\r\\n                                <button mat-button class=\\\"btn btn-info\\\" (click)=\\\"edit()\\\" *ngIf=\\\"!isSave\\\"><i class=\\\"fa fa-pencil-square-o\\\"\\r\\n                                                aria-hidden=\\\"true\\\"></i> Edit</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"px-2 float-right\\\" *ngIf=\\\"isSave\\\">\\r\\n                                <button mat-button class=\\\"btn btn-success\\\" (click)=\\\"save()\\\"><i class=\\\"fa fa-save\\\"\\r\\n                                                aria-hidden=\\\"true\\\"></i> Save</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"px-2 float-right\\\">\\r\\n                                <button mat-button class=\\\"btn btn-secondary\\\" tabindex=\\\"-1\\\" *ngIf=\\\"isSave\\\" (click)=\\\"onCancelClick()\\\"><i\\r\\n                                                class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> Cancel</button>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <!-- <div class=\\\"w-100 float-left d-block table-info px-4 py-2 table-info\\\" >\\r\\n            <div class=\\\"px-2 float-right\\\" *ngIf=\\\"notfound\\\">\\r\\n                    <button mat-button class=\\\"btn btn-secondary\\\"(click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> Cancel</button>\\r\\n            </div>\\r\\n\\r\\n\\r\\n</div> -->\\r\\n\\r\\n                <!-- <div class=\\\"w-100 float-left d-block table-info px-4 py-2 table-info\\\" *ngIf=\\\"disablediv\\\">\\r\\n            <div class=\\\"px-2 float-right\\\">\\r\\n            </div>\\r\\n    </div> -->\\r\\n\\r\\n        </div>\"","module.exports = \".container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 650px; }\\n\\n.container > * {\\n  width: 100%; }\\n\\n.form {\\n  display: flex; }\\n\\n.mat-form-field {\\n  font-size: 16px;\\n  flex-grow: 1; }\\n\\n.contactlist-container, #paginator {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 300px;\\n  max-height: 700px;\\n  overflow: auto;\\n  margin: 0 auto; }\\n\\n::ng-deep .mat-tab-label {\\n  color: white; }\\n\\n::ng-deep .mat-success {\\n  background-color: green;\\n  color: #fff; }\\n\\n.margin-left {\\n  margin-left: 90%; }\\n\"","import { MAT_DIALOG_DATA, MatDialogRef, MatFormField, MatFormFieldControl, MatTabChangeEvent, MatSnackBar } from '@angular/material';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { SharedService } from '../../Shared/shared.service';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n// import { Project,Client,Domain,Resource } from '../project/projectModel';\r\nimport { Project, Client, Domain, Resource } from '../projenctModel';\r\nimport { routerTransition } from '../../../router.animations';\r\nimport { SnackBarComponentExampleComponent } from '../../project/snack-bar-component-example/snack-bar-component-example.component';\r\nimport { Action } from 'rxjs/internal/scheduler/Action';\r\nimport { ok } from 'assert';\r\n\r\n@Component({\r\n    selector: 'app-edit',\r\n    templateUrl: './edit.component.html',\r\n    styleUrls: ['./edit.component.scss'],\r\n    animations: [routerTransition()]\r\n})\r\nexport class EditComponent implements OnInit {\r\n    projectdetails: any;\r\n    clientdetails: any;\r\n    resourcedetails: any;\r\n    taskdetails: any;\r\n    disable: Boolean = true;\r\n    editvisible: Boolean = false;\r\n    savevisible: Boolean = false;\r\n    Status: any;\r\n    Shift: any;\r\n    Location: any;\r\n    ReportingHead: any;\r\n    Role: any;\r\n    disablediv: Boolean = true;\r\n    disableSummary: Boolean = true;\r\n    date: Date;\r\n    TechnicalDomainList: any;\r\n    Technologylist: any;\r\n    isshown: Boolean = false;\r\n    ishidden: Boolean = false;\r\n    isSave: Boolean = false;\r\n    isCancelVisible: Boolean = false;\r\n    isCancelDisabled = false;\r\n    notfound: Boolean = false;\r\n    projectid: any;\r\n\r\n    constructor(private route: ActivatedRoute, public dataService: SharedService,\r\n        private router: Router, private project: Project, public snackBar: MatSnackBar) {\r\n        const id = this.route.snapshot.paramMap.get('ProjectID');\r\n        this.projectid = id;\r\n        debugger;\r\n        this.dataService.GetProjectById(id).subscribe(\r\n            res => {\r\n                //debugger;\r\n                //if (res.message = 'Record Not Found.') {\r\n                //  this.notfound = true;\r\n\r\n                // } else {\r\n                //debugger;\r\n                //console.log(res);\r\n                this.projectdetails = res;\r\n                this.clientdetails = res;\r\n                this.date = new Date('12/11/2018');\r\n                debugger;\r\n\r\n                this.resourcedetails = res;\r\n                this.taskdetails = res;\r\n                // }\r\n            }, error => {\r\n                alert(\"Invalid Request!\");\r\n                this.router.navigate(['/project']);\r\n                const errorresult = 'No Result';\r\n            }\r\n        );\r\n        this.dataService.GetAllTechnologyByDomain(id).subscribe(\r\n            res => {\r\n\r\n                this.Technologylist = res;\r\n            }\r\n            //,     error => {                    \r\n            //         alert(\"Invalid Domain!\");\r\n            //     //    this.router.navigate(['/project']);\r\n            // const errorresult = 'No Result';\r\n            //     }\r\n        );\r\n        this.GetAllClientStatus();\r\n        this.GetAllShift();\r\n        this.GetAllLocation();\r\n        this.GetAllReportingHead();\r\n        this.GetAllRole();\r\n        this.GetAllTechDomain();\r\n\r\n\r\n\r\n    }\r\n    formControl = new FormControl('', [\r\n        Validators.required\r\n    ]);\r\n    ngOnInit() {\r\n    }\r\n    getErrorMessage() {\r\n        return this.formControl.hasError('required') ? 'Required field' :\r\n            this.formControl.hasError('email') ? 'Not a valid email' :\r\n                '';\r\n    }\r\n    submit() {\r\n\r\n    }\r\n\r\n    onLinkClick(event: MatTabChangeEvent) {\r\n        if (event.index == 0) {\r\n            this.isCancelDisabled = false;\r\n            this.dataService.GetProjectById(this.projectid).subscribe(res => { this.projectdetails = res; });\r\n        }\r\n\r\n        this.disablediv = true;\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.router.navigate(['project']);\r\n    }\r\n    onCancelClick() {\r\n\r\n        this.dataService.GetProjectById(this.projectid).subscribe(res => { this.projectdetails = res; });\r\n        this.isSave = false;\r\n        //this.disableSummary = true;\r\n        this.disable = true;\r\n    }\r\n    edit() {\r\n        //this.disableSummary = true;\r\n        this.disable = false;\r\n\r\n        this.isSave = true;\r\n\r\n        //this.isCancelVisible= true;\r\n\r\n    }\r\n    save() {\r\n        this.dataService.updateProject(this.projectdetails).subscribe(\r\n            res => {\r\n                sessionStorage.setItem('message', 'updated');\r\n                //this.openSnackBar();  \r\n                this.snackBar.open('Project edited successfully', 'ok', { duration: 2500 });\r\n                this.dataService.getAllProject();\r\n                this.disable = true;\r\n                this.isSave = false;\r\n            });\r\n\r\n\r\n    }\r\n    GetPlaceHolder(controlName: string) {\r\n        if (!this.disable) {\r\n            switch (controlName) {\r\n                case 'ProjectDomain_ID': return \"Select Technical Domain \";\r\n                case 'ProjectStartDate': return \"Select Start Date\";\r\n                case 'ProjectEndDate': return \"Select End Date\";\r\n            }\r\n        }\r\n        else {\r\n            return \" \";\r\n        }\r\n    }\r\n    public GetAllClientStatus() {\r\n        this.dataService.getallclientstatus().subscribe(\r\n            res => {\r\n                this.Status = res;\r\n            });\r\n    }\r\n    public GetAllShift() {\r\n        this.dataService.getallshift().subscribe(\r\n            res => {\r\n                this.Shift = res;\r\n            });\r\n    }\r\n\r\n    public GetAllLocation() {\r\n        this.dataService.getalllocation().subscribe(\r\n            res => {\r\n                this.Location = res;\r\n            });\r\n    }\r\n    public GetAllReportingHead() {\r\n        this.dataService.getallreportinghead().subscribe(\r\n            res => {\r\n                this.ReportingHead = res;\r\n            });\r\n    }\r\n    public GetAllRole() {\r\n        this.dataService.getallrole().subscribe(\r\n            res => {\r\n                this.Role = res;\r\n            });\r\n    }\r\n    public GetAllTechDomain() {\r\n        this.dataService.getalltechdomains().subscribe(\r\n            res => {\r\n                this.TechnicalDomainList = res;\r\n                //console.log(\"TechnicalDomainList:\"+JSON.stringify(this.TechnicalDomainList) )\r\n            }\r\n        );\r\n    }\r\n    openSnackBar() {\r\n        this.snackBar.openFromComponent(SnackBarComponentExampleComponent, {\r\n            duration: 1000,\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProjectComponent } from './project.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { AddComponent } from './add/add.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', children: [\r\n\r\n            {path: '', component: ProjectComponent},\r\n             {path: 'edit/:ProjectID', component: EditComponent},\r\n            //{path: 'edit', component: EditComponent}\r\n            {path: 'add', component: AddComponent}\r\n\r\n        ]\r\n    },\r\n    {\r\n\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProjectRoutingModule { }\r\n","module.exports = \"<div  [@routerTransition]>\\r\\n        <app-page-header [heading]=\\\"'Project'\\\" [icon]=\\\"'fa fa-users'\\\"></app-page-header>\\r\\n\\r\\n      </div>\\r\\n        <div  *ngIf=\\\"disableforadd\\\">\\r\\n        <mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"table-active\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"ProjectID\\\">\\r\\n            <mat-header-cell class=\\\"bg-info\\\" hidden mat-header-cell *matHeaderCellDef mat-sort-header> <span class=\\\"text-white \\\">Project ID</span> </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\" hidden> {{element.ProjectID}} </mat-cell>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Title\\\">\\r\\n            <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header><span class=\\\"text-white  pl-3\\\">Project Name </span> </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\" class=\\\"pl-3\\\"> {{element.Title}} </mat-cell>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"ClientName\\\">\\r\\n            <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header><span class=\\\"text-white pl-3\\\">Client Name </span> </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\" class=\\\"pl-3\\\"> {{element.ClientName}} </mat-cell>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Description\\\">\\r\\n            <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header><span class=\\\"text-white  pl-3\\\">Description</span> </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.Description}} </mat-cell>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"DomainName\\\">\\r\\n            <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header> <span class=\\\"text-white  pl-3\\\">Domain Name</span> </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.DomainName}} </mat-cell>\\r\\n          </ng-container>\\r\\n          <!-- co client  Column -->\\r\\n          <!-- <ng-container matColumnDef=\\\"CoClient\\\">\\r\\n              <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header>  <span class=\\\"text-white text-uppercase\\\">Co Client</span> </mat-header-cell>\\r\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.CoClient}} </mat-cell>\\r\\n            </ng-container> -->\\r\\n          <!--Action  Column, will contains button for View,Edit and Delete -->\\r\\n            <ng-container matColumnDef=\\\"actions\\\">\\r\\n              <mat-header-cell class=\\\"bg-info\\\" mat-header-cell *matHeaderCellDef mat-sort-header> </mat-header-cell>\\r\\n              <mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-right\\\">\\r\\n                <!-- [routerLink]=\\\"['/client-details'] -->\\r\\n                  <button mat-button (click)=\\\"editproject(element)\\\"  class=\\\"btn btn-info mx-1\\\"><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i> View</button>\\r\\n\\r\\n                  <button mat-button (click)=\\\"deleteproject(element.ProjectID,element.Status)\\\"  *ngIf=\\\"element.Status=='0'\\\" class=\\\"btn btn-danger mx-1\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> Delete</button>\\r\\n                  <button mat-button (click)=\\\"deleteproject(element.ProjectID,element.Status)\\\" mat-raised-button color=\\\"accent\\\" *ngIf=\\\"element.Status=='1'\\\" class=\\\"btn btn-danger mx-1\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> Activate </button>\\r\\n              </mat-cell>\\r\\n            </ng-container>\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row >\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n        </mat-table>\\r\\n        <!-- this code is for pagignator -->\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 15]\\\" showFirstLastButtons class=\\\"table-active\\\"></mat-paginator>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"w-100 float-left table-info px-4 py-2 text-right\\\">\\r\\n        <!-- This button will be used to add client into the database-->\\r\\n\\r\\n        <button  mat-button class=\\\"btn btn-info\\\" (click)=\\\"addProject()\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> Add Project</button>\\r\\n      </div>\\r\\n\"","module.exports = \"/* Structure */\\n.container {\\n  display: flex;\\n  flex-direction: column; }\\n/* Toolbar */\\n.spacer {\\n  flex: 1 1 auto; }\\n/* Filter */\\n.form {\\n  min-height: 56px;\\n  max-height: 56px;\\n  display: flex;\\n  align-items: center;\\n  padding: 8px 24px 0;\\n  font-size: 20px;\\n  justify-content: space-between;\\n  border-bottom: 1px solid transparent; }\\n.mat-form-field {\\n  font-size: 14px;\\n  flex-grow: 1;\\n  margin-top: 8px; }\\n/* Mat table */\\n.no-results {\\n  display: flex;\\n  justify-content: center;\\n  padding: 14px;\\n  font-size: 14px;\\n  font-style: italic; }\\n\"","import { Component, OnInit, Inject, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { HttpClient, HttpClientModule, HttpResponse, HttpRequest } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { stringify } from '@angular/core/src/render3/util';\r\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\r\nimport { MatTable, MatTableDataSource, MatPaginator, MatSort, MatDialog, MatSnackBar  } from '@angular/material';\r\nimport { StorageService, SESSION_STORAGE } from 'angular-webstorage-service';\r\nimport { SharedService } from '../Shared/shared.service';\r\nimport { Observable } from 'rxjs';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { Project } from '../project/projenctModel';\r\nimport { AddComponent } from './add/add.component';\r\nimport { BehaviorSubject, fromEvent } from 'rxjs';\r\n//import { SnackBarComponentExampleComponent } from './snack-bar-component-example/snack-bar-component-example.component';\r\n@Component({\r\n    selector: 'app-project',\r\n    templateUrl: './project.component.html',\r\n    styleUrls: ['./project.component.scss'],\r\n    animations: [routerTransition()]\r\n})\r\n\r\nexport class ProjectComponent implements OnInit, AfterViewInit {\r\n    project: any;\r\n    displayedColumns = ['ProjectID','Title', 'ClientName', 'DomainName', 'Description', 'actions'];\r\n    projectdetails: any;\r\n    exampleDatabase: SharedService | null;\r\n    index: number;\r\n    id: number;\r\n    componentRef: any;\r\n    disableforadd: Boolean = true;\r\n    @ViewChild('filter') filter: ElementRef;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    dataSource: any;\r\n    constructor(private http: HttpClient, @Inject(SESSION_STORAGE) private storage: StorageService,\r\n        private apiService: SharedService, private router: Router, public dialog: MatDialog) {\r\n        this.RenderDataTable();\r\n        this.dataSource = new MatTableDataSource(this.project);\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    // addProject(project: Project) {\r\n    addProject() {        \r\n        this.router.navigate(['./project/add']);\r\n        // {path: 'project', component: ProjectComponent}\r\n\r\n\r\n        // const dialogRef = this.dialog.open(AddComponent, {\r\n        //     data: { issue: project }\r\n        // });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     if (result === 1) {\r\n        //         this.refreshTable();\r\n        //         this.RenderDataTable();\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    RenderDataTable() {\r\n        this.apiService.getAllProject()\r\n            .subscribe(\r\n                res => {\r\n                    this.project = res;\r\n                    this.dataSource = new MatTableDataSource(this.project);\r\n                    this.dataSource.paginator = this.paginator;\r\n                    this.dataSource.sort = this.sort;\r\n                    console.log(\"project\"+JSON.stringify (this.project));\r\n                },\r\n                error => {\r\n                    console.log('There was an error while retrieving Posts !!!' + error);\r\n                });\r\n\r\n\r\n    }\r\n    editproject(data: any) {\r\n        this.router.navigate(['./project/edit', data.ProjectID]);\r\n    }\r\n    private refreshTable() {\r\n    }\r\n    deleteproject(id, status) {\r\n        // const dialogRef = this.dialog.open(\"Test\", {\r\n        //     width: '250px',\r\n        //   //data: {name: this.name, animal: this.animal}\r\n        //   });\r\n        if (status = 1) {\r\n            const Id = id;\r\n            if (confirm('Are you sure to Activate this record ?' + id) === true) {\r\n                this.apiService.DeletProject(id).subscribe(res => {\r\n                    this.RenderDataTable();\r\n                });\r\n            }\r\n        } else {\r\n\r\n            const Id = id;\r\n            if (confirm('Are you sure to delete this record ?' + id) === true) {\r\n                this.apiService.DeletProject(id).subscribe(res => {\r\n                    this.RenderDataTable();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    applyFilter(filterValue: string) {\r\n        filterValue = filterValue.trim();\r\n        filterValue = filterValue.toLowerCase();\r\n        this.dataSource.filter = filterValue;\r\n    }\r\n    ngAfterViewInit() {\r\n        this.dataSource.paginator = this.paginator;\r\n    }\r\n    // openSnackBar() {\r\n    //     this.snackBar.openFromComponent(SnackBarComponentExampleComponent, {\r\n    //       duration: 500,\r\n    //     });\r\n    // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProjectRoutingModule } from './project-routing.module';\r\nimport { ProjectComponent } from './project.component';\r\nimport {\r\n    MatProgressSpinnerModule, MatDialogModule, MatIconModule, MatSidenavModule, MatSnackBarModule, MatMenuModule, MatProgressBarModule,\r\n    MatCardModule, MatToolbarModule, MatButtonModule, MatTableModule, MatInputModule,\r\n    MatPaginatorModule, MatPaginator, MatSortModule, MatSelectModule, MatTooltipModule, MatTooltip, MatListModule, MatExpansionModule,\r\n    MatCheckboxModule, MatCheckbox, MatTabsModule, MatDatepickerModule, MatNativeDateModule, MatChipsModule, MatSlideToggleModule,\r\n     MatAutocompleteModule, DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatFormFieldModule, MatRadioModule,\r\n  } from '@angular/material';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { PageHeaderModule } from '../../shared';\r\nimport { Project } from '../project/projenctModel';\r\nimport { AddComponent } from './add/add.component';\r\nimport { SnackBarComponentExampleComponent } from './snack-bar-component-example/snack-bar-component-example.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ProjectRoutingModule,\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatRadioModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule, PageHeaderModule \r\n\r\n  ],\r\n  declarations: [ProjectComponent, EditComponent, AddComponent, SnackBarComponentExampleComponent],\r\n  entryComponents: [AddComponent, SnackBarComponentExampleComponent],\r\n  providers: [Project]\r\n})\r\nexport class ProjectModule { }\r\n","export class Issue {\r\n    id: number;\r\n    title: string;\r\n    state: string;\r\n    url: string;\r\n    created_at: string;\r\n    updated_at: string;\r\n  }\r\n  export class  Project {\r\n    ProjectID: number;\r\n    Description: string;\r\n    ClientName: string;\r\n    Title: string;\r\n    DomainName: string;\r\n    ClientDetailID: number;\r\n    // updated_at: string;\r\n  }\r\n  export class Client{\r\n    ClientDetailID:number;\r\n    ClientName:string;\r\n\r\n  }\r\n  export class Domain{\r\n    TechDomainID:number;\r\n    DoaminName:number;\r\n    IsActive:boolean;\r\n  }\r\n  export class Resource{\r\n    FirstName:string;\r\n    MiddleName:string;\r\n    LastName:string;\r\n    TotalExperience:number;\r\n    EmailID:string;\r\n    MobileNumber:number;\r\n    IsActive:boolean;\r\n    Remarks:string;\r\n    Shift:number;\r\n    Location:number;\r\n    Role:number;\r\n  }\r\n\r\n","module.exports = \"<p>\\r\\n  Project {{data}} successfully!  \\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-snack-bar-component-example',\r\n  templateUrl: './snack-bar-component-example.component.html',\r\n  styleUrls: ['./snack-bar-component-example.component.scss']\r\n})\r\nexport class SnackBarComponentExampleComponent implements OnInit {\r\n data:string=sessionStorage.getItem('message');\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}